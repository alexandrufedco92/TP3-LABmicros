   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"FSK_Demodulator.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.FSK_signal,"aw",%nobits
  18              		.align	2
  21              	FSK_signal:
  22 0000 00000000 		.space	164
  22      00000000 
  22      00000000 
  22      00000000 
  22      00000000 
  23              		.section	.bss.PreFiltered_signal,"aw",%nobits
  24              		.align	2
  27              	PreFiltered_signal:
  28 0000 00000000 		.space	164
  28      00000000 
  28      00000000 
  28      00000000 
  28      00000000 
  29              		.section	.data.last_fir_output,"aw",%progbits
  30              		.align	2
  33              	last_fir_output:
  34 0000 0000803F 		.word	1065353216
  35              		.section	.bss.last_sample_value,"aw",%nobits
  36              		.align	2
  39              	last_sample_value:
  40 0000 00000000 		.space	4
  41              		.section	.bss.average_aux,"aw",%nobits
  42              		.align	2
  45              	average_aux:
  46 0000 00000000 		.space	4
  47              		.section	.bss.sample_counter,"aw",%nobits
  50              	sample_counter:
  51 0000 00       		.space	1
  52              		.section	.bss.idle_counter,"aw",%nobits
  55              	idle_counter:
  56 0000 00       		.space	1
  57              		.section	.data.idle,"aw",%progbits
  60              	idle:
  61 0000 01       		.byte	1
  62              		.section	.bss.fs,"aw",%nobits
  63              		.align	2
  66              	fs:
  67 0000 00000000 		.space	4
  68              		.section	.bss.prev_samples,"aw",%nobits
  71              	prev_samples:
  72 0000 00       		.space	1
  73              		.section	.data.fir_coeffs,"aw",%progbits
  74              		.align	2
  77              	fir_coeffs:
  78 0000 750F233C 		.word	1008930677
  79 0004 BC98D33C 		.word	1020500156
  80 0008 0D62AB3B 		.word	1001087501
  81 000c 147AA8BC 		.word	-1129809388
  82 0010 18DC4DBD 		.word	-1118970856
  83 0014 58BB21BD 		.word	-1121862824
  84 0018 43BAF73C 		.word	1022868035
  85 001c 814F153E 		.word	1041584001
  86 0020 DB79823E 		.word	1048738267
  87 0024 6170993E 		.word	1050243169
  88 0028 DB79823E 		.word	1048738267
  89 002c 814F153E 		.word	1041584001
  90 0030 43BAF73C 		.word	1022868035
  91 0034 58BB21BD 		.word	-1121862824
  92 0038 18DC4DBD 		.word	-1118970856
  93 003c 147AA8BC 		.word	-1129809388
  94 0040 0D62AB3B 		.word	1001087501
  95 0044 BC98D33C 		.word	1020500156
  96 0048 750F233C 		.word	1008930677
  97              		.global	__aeabi_ui2d
  98              		.global	__aeabi_dmul
  99              		.global	__aeabi_d2uiz
 100              		.section	.text.DemodulatorInit,"ax",%progbits
 101              		.align	1
 102              		.global	DemodulatorInit
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	DemodulatorInit:
 109              	.LFB0:
 110              		.file 1 "../source/FSK_Demodulator.c"
   1:../source/FSK_Demodulator.c **** /*
   2:../source/FSK_Demodulator.c ****  * FSK_Demodulator.c
   3:../source/FSK_Demodulator.c ****  *
   4:../source/FSK_Demodulator.c ****  *  Created on: Oct 19, 2019
   5:../source/FSK_Demodulator.c ****  *      Author: G5
   6:../source/FSK_Demodulator.c ****  */
   7:../source/FSK_Demodulator.c **** 
   8:../source/FSK_Demodulator.c **** #include "FSK_Demodulator.h"
   9:../source/FSK_Demodulator.c **** /***********************************************************
  10:../source/FSK_Demodulator.c ****  *					 DEFINES AND MACROS
  11:../source/FSK_Demodulator.c ****  ***********************************************************/
  12:../source/FSK_Demodulator.c **** #define FL 1200	//Frequency of a logical '1'
  13:../source/FSK_Demodulator.c **** #define FH 2200	//Frequency of a logical '0'
  14:../source/FSK_Demodulator.c **** #define DELAY 0.0004464 //Delay optimo en s
  15:../source/FSK_Demodulator.c **** #define F_SAMPLE 12000 //Sample frecuency of 12KHz
  16:../source/FSK_Demodulator.c **** #define VLOW -0.25
  17:../source/FSK_Demodulator.c **** #define VHIGH 0.25
  18:../source/FSK_Demodulator.c **** #define FIR_ORDER 18
  19:../source/FSK_Demodulator.c **** //Reconstruction parameters
  20:../source/FSK_Demodulator.c **** #define AVG_SAMPLES 10 //Number of samples to average to decide '1' or '0'.
  21:../source/FSK_Demodulator.c **** #define MID 0.5				//Treshold for deciding between '0' and '1'.
  22:../source/FSK_Demodulator.c **** #define IDLE_LIMIT 8		//Nummber of '1' symbols in a row that start idle state.
  23:../source/FSK_Demodulator.c **** 
  24:../source/FSK_Demodulator.c **** //Size of Buffers
  25:../source/FSK_Demodulator.c **** #define CIRCULAR_BUFFER_SIZE 40
  26:../source/FSK_Demodulator.c **** 
  27:../source/FSK_Demodulator.c **** typedef struct{
  28:../source/FSK_Demodulator.c **** 	float buffer[CIRCULAR_BUFFER_SIZE];
  29:../source/FSK_Demodulator.c **** 	int16_t curr; //indice del ultimo elemento agregado
  30:../source/FSK_Demodulator.c **** }circular_buffer_t;
  31:../source/FSK_Demodulator.c **** /***********************************************************
  32:../source/FSK_Demodulator.c ****  * 				VARIABLES WITH GLOBAL SCOPE
  33:../source/FSK_Demodulator.c ****  ***********************************************************/
  34:../source/FSK_Demodulator.c **** static circular_buffer_t FSK_signal;
  35:../source/FSK_Demodulator.c **** static circular_buffer_t PreFiltered_signal;
  36:../source/FSK_Demodulator.c **** static float last_fir_output = 1;
  37:../source/FSK_Demodulator.c **** static float last_sample_value;		//Last digital value recieved
  38:../source/FSK_Demodulator.c **** static float average_aux = 0;		//Average of Comparatpr samples.
  39:../source/FSK_Demodulator.c **** static uint8_t sample_counter = 0;	//Counts number of samples averaged.
  40:../source/FSK_Demodulator.c **** static uint8_t idle_counter = 0;	//Counter that indicates if in idle state.
  41:../source/FSK_Demodulator.c **** static bool idle = true;		//Flag that indicates if in idle state
  42:../source/FSK_Demodulator.c **** 
  43:../source/FSK_Demodulator.c **** static uint32_t fs; //Sample frequency of the FSK signal
  44:../source/FSK_Demodulator.c **** static uint8_t prev_samples; //number of samples acorrding to the delay and the fs.
  45:../source/FSK_Demodulator.c **** static float fir_coeffs[] = {0.0099524156275609069, 0.025829664997474223, 0.0052301942208776179,
  46:../source/FSK_Demodulator.c **** 							-0.020566023428597952, -0.050258725765821938, -0.039485305772910186,
  47:../source/FSK_Demodulator.c **** 							0.030240182765554114, 0.14581109542716533, 0.2548359331518294,
  48:../source/FSK_Demodulator.c **** 							0.29968551708002261, 0.2548359331518294, 0.14581109542716533,
  49:../source/FSK_Demodulator.c **** 							0.030240182765554114, -0.039485305772910186, -0.050258725765821938,
  50:../source/FSK_Demodulator.c **** 							-0.020566023428597952, 0.0052301942208776179, 0.025829664997474223,
  51:../source/FSK_Demodulator.c **** 							0.0099524156275609069};
  52:../source/FSK_Demodulator.c **** 
  53:../source/FSK_Demodulator.c **** 
  54:../source/FSK_Demodulator.c **** 
  55:../source/FSK_Demodulator.c **** /***********************************************************
  56:../source/FSK_Demodulator.c ****  * 				LOCAL FUNCTIONS DECLARATIONS
  57:../source/FSK_Demodulator.c ****  ***********************************************************/
  58:../source/FSK_Demodulator.c **** 
  59:../source/FSK_Demodulator.c **** /**
  60:../source/FSK_Demodulator.c ****  * @brief Applys FIR filter and stores the results
  61:../source/FSK_Demodulator.c ****  * @param cant Number of values to calculate
  62:../source/FSK_Demodulator.c **** */
  63:../source/FSK_Demodulator.c **** float ApplyFIR(void);
  64:../source/FSK_Demodulator.c **** 
  65:../source/FSK_Demodulator.c **** /**
  66:../source/FSK_Demodulator.c ****  * @brief Stores value of digital signal
  67:../source/FSK_Demodulator.c ****  * @param digital_signal
  68:../source/FSK_Demodulator.c ****  * @param cant number of samples from analog signal
  69:../source/FSK_Demodulator.c **** */
  70:../source/FSK_Demodulator.c **** int8_t ReconstructSignal(float comp_out);
  71:../source/FSK_Demodulator.c **** 
  72:../source/FSK_Demodulator.c **** /***********************************************************
  73:../source/FSK_Demodulator.c ****  * 				FUNCTIONS WITH GLOBAL SCOPE
  74:../source/FSK_Demodulator.c ****  ***********************************************************/
  75:../source/FSK_Demodulator.c **** void DemodulatorInit(void)
  76:../source/FSK_Demodulator.c **** {
 111              		.loc 1 76 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115 0000 98B5     		push	{r3, r4, r7, lr}
 116              		.cfi_def_cfa_offset 16
 117              		.cfi_offset 3, -16
 118              		.cfi_offset 4, -12
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0002 00AF     		add	r7, sp, #0
 122              		.cfi_def_cfa_register 7
  77:../source/FSK_Demodulator.c **** 	fs = F_SAMPLE;
 123              		.loc 1 77 0
 124 0004 164B     		ldr	r3, .L2+8
 125 0006 42F6E062 		movw	r2, #12000
 126 000a 1A60     		str	r2, [r3]
  78:../source/FSK_Demodulator.c **** 	FSK_signal.curr = -1;
 127              		.loc 1 78 0
 128 000c 154B     		ldr	r3, .L2+12
 129 000e 4FF6FF72 		movw	r2, #65535
 130 0012 A3F8A020 		strh	r2, [r3, #160]	@ movhi
  79:../source/FSK_Demodulator.c **** 	PreFiltered_signal.curr = -1;
 131              		.loc 1 79 0
 132 0016 144B     		ldr	r3, .L2+16
 133 0018 4FF6FF72 		movw	r2, #65535
 134 001c A3F8A020 		strh	r2, [r3, #160]	@ movhi
  80:../source/FSK_Demodulator.c **** 
  81:../source/FSK_Demodulator.c **** 	prev_samples = (uint8_t)( DELAY*fs);
 135              		.loc 1 81 0
 136 0020 0F4B     		ldr	r3, .L2+8
 137 0022 1B68     		ldr	r3, [r3]
 138 0024 1846     		mov	r0, r3
 139 0026 FFF7FEFF 		bl	__aeabi_ui2d
 140              	.LVL0:
 141 002a 0BA3     		adr	r3, .L2
 142 002c D3E90023 		ldrd	r2, [r3]
 143 0030 FFF7FEFF 		bl	__aeabi_dmul
 144              	.LVL1:
 145 0034 0346     		mov	r3, r0
 146 0036 0C46     		mov	r4, r1
 147 0038 1846     		mov	r0, r3
 148 003a 2146     		mov	r1, r4
 149 003c FFF7FEFF 		bl	__aeabi_d2uiz
 150              	.LVL2:
 151 0040 0346     		mov	r3, r0
 152 0042 DAB2     		uxtb	r2, r3
 153 0044 094B     		ldr	r3, .L2+20
 154 0046 1A70     		strb	r2, [r3]
  82:../source/FSK_Demodulator.c **** 	last_sample_value = 1;
 155              		.loc 1 82 0
 156 0048 094B     		ldr	r3, .L2+24
 157 004a 4FF07E52 		mov	r2, #1065353216
 158 004e 1A60     		str	r2, [r3]	@ float
  83:../source/FSK_Demodulator.c **** }
 159              		.loc 1 83 0
 160 0050 00BF     		nop
 161 0052 98BD     		pop	{r3, r4, r7, pc}
 162              	.L3:
 163 0054 AFF30080 		.align	3
 164              	.L2:
 165 0058 08A3A366 		.word	1722000136
 166 005c 59413D3F 		.word	1060979033
 167 0060 00000000 		.word	fs
 168 0064 00000000 		.word	FSK_signal
 169 0068 00000000 		.word	PreFiltered_signal
 170 006c 00000000 		.word	prev_samples
 171 0070 00000000 		.word	last_sample_value
 172              		.cfi_endproc
 173              	.LFE0:
 175              		.section	.text.DemodulateSignal,"ax",%progbits
 176              		.align	1
 177              		.global	DemodulateSignal
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	DemodulateSignal:
 184              	.LFB1:
  84:../source/FSK_Demodulator.c **** 
  85:../source/FSK_Demodulator.c **** int8_t DemodulateSignal(float recieved)
  86:../source/FSK_Demodulator.c **** {
 185              		.loc 1 86 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 24
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189 0000 80B5     		push	{r7, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 86B0     		sub	sp, sp, #24
 194              		.cfi_def_cfa_offset 32
 195 0004 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 197 0006 87ED010A 		vstr.32	s0, [r7, #4]
  87:../source/FSK_Demodulator.c **** 	float aux = 0;
 198              		.loc 1 87 0
 199 000a 4FF00003 		mov	r3, #0
 200 000e 3B61     		str	r3, [r7, #16]	@ float
  88:../source/FSK_Demodulator.c **** 	uint16_t aux_index = 0;
 201              		.loc 1 88 0
 202 0010 0023     		movs	r3, #0
 203 0012 FB82     		strh	r3, [r7, #22]	@ movhi
  89:../source/FSK_Demodulator.c **** 	float comp_out = 0; //Comparator output
 204              		.loc 1 89 0
 205 0014 4FF00003 		mov	r3, #0
 206 0018 FB60     		str	r3, [r7, #12]	@ float
  90:../source/FSK_Demodulator.c **** 
  91:../source/FSK_Demodulator.c **** 	//Update FSK Buffer
  92:../source/FSK_Demodulator.c **** 	FSK_signal.curr = (FSK_signal.curr+1) % CIRCULAR_BUFFER_SIZE;
 207              		.loc 1 92 0
 208 001a 374B     		ldr	r3, .L8
 209 001c B3F9A030 		ldrsh	r3, [r3, #160]
 210 0020 5A1C     		adds	r2, r3, #1
 211 0022 364B     		ldr	r3, .L8+4
 212 0024 83FB0213 		smull	r1, r3, r3, r2
 213 0028 1911     		asrs	r1, r3, #4
 214 002a D317     		asrs	r3, r2, #31
 215 002c C91A     		subs	r1, r1, r3
 216 002e 0B46     		mov	r3, r1
 217 0030 9B00     		lsls	r3, r3, #2
 218 0032 0B44     		add	r3, r3, r1
 219 0034 DB00     		lsls	r3, r3, #3
 220 0036 D11A     		subs	r1, r2, r3
 221 0038 0AB2     		sxth	r2, r1
 222 003a 2F4B     		ldr	r3, .L8
 223 003c A3F8A020 		strh	r2, [r3, #160]	@ movhi
  93:../source/FSK_Demodulator.c **** 	(FSK_signal.buffer)[FSK_signal.curr] = recieved;
 224              		.loc 1 93 0
 225 0040 2D4B     		ldr	r3, .L8
 226 0042 B3F9A030 		ldrsh	r3, [r3, #160]
 227 0046 2C4A     		ldr	r2, .L8
 228 0048 9B00     		lsls	r3, r3, #2
 229 004a 1344     		add	r3, r3, r2
 230 004c 7A68     		ldr	r2, [r7, #4]	@ float
 231 004e 1A60     		str	r2, [r3]	@ float
  94:../source/FSK_Demodulator.c **** 
  95:../source/FSK_Demodulator.c **** 	//Update PreFiltered Buffer
  96:../source/FSK_Demodulator.c **** 	PreFiltered_signal.curr = (PreFiltered_signal.curr+1) % CIRCULAR_BUFFER_SIZE;
 232              		.loc 1 96 0
 233 0050 2B4B     		ldr	r3, .L8+8
 234 0052 B3F9A030 		ldrsh	r3, [r3, #160]
 235 0056 5A1C     		adds	r2, r3, #1
 236 0058 284B     		ldr	r3, .L8+4
 237 005a 83FB0213 		smull	r1, r3, r3, r2
 238 005e 1911     		asrs	r1, r3, #4
 239 0060 D317     		asrs	r3, r2, #31
 240 0062 C91A     		subs	r1, r1, r3
 241 0064 0B46     		mov	r3, r1
 242 0066 9B00     		lsls	r3, r3, #2
 243 0068 0B44     		add	r3, r3, r1
 244 006a DB00     		lsls	r3, r3, #3
 245 006c D11A     		subs	r1, r2, r3
 246 006e 0AB2     		sxth	r2, r1
 247 0070 234B     		ldr	r3, .L8+8
 248 0072 A3F8A020 		strh	r2, [r3, #160]	@ movhi
  97:../source/FSK_Demodulator.c **** 	aux =  recieved;
 249              		.loc 1 97 0
 250 0076 7B68     		ldr	r3, [r7, #4]	@ float
 251 0078 3B61     		str	r3, [r7, #16]	@ float
  98:../source/FSK_Demodulator.c **** 	if( (PreFiltered_signal.curr - prev_samples) < 0 )
 252              		.loc 1 98 0
 253 007a 214B     		ldr	r3, .L8+8
 254 007c B3F9A030 		ldrsh	r3, [r3, #160]
 255 0080 1A46     		mov	r2, r3
 256 0082 204B     		ldr	r3, .L8+12
 257 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 258 0086 D31A     		subs	r3, r2, r3
 259 0088 002B     		cmp	r3, #0
 260 008a 0BDA     		bge	.L5
  99:../source/FSK_Demodulator.c **** 	{
 100:../source/FSK_Demodulator.c **** 		aux_index = CIRCULAR_BUFFER_SIZE + (PreFiltered_signal.curr - prev_samples);
 261              		.loc 1 100 0
 262 008c 1C4B     		ldr	r3, .L8+8
 263 008e B3F9A030 		ldrsh	r3, [r3, #160]
 264 0092 9AB2     		uxth	r2, r3
 265 0094 1B4B     		ldr	r3, .L8+12
 266 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 267 0098 9BB2     		uxth	r3, r3
 268 009a D31A     		subs	r3, r2, r3
 269 009c 9BB2     		uxth	r3, r3
 270 009e 2833     		adds	r3, r3, #40
 271 00a0 FB82     		strh	r3, [r7, #22]	@ movhi
 272 00a2 08E0     		b	.L6
 273              	.L5:
 101:../source/FSK_Demodulator.c **** 	}
 102:../source/FSK_Demodulator.c **** 	else
 103:../source/FSK_Demodulator.c **** 	{
 104:../source/FSK_Demodulator.c **** 		aux_index = PreFiltered_signal.curr - prev_samples;
 274              		.loc 1 104 0
 275 00a4 164B     		ldr	r3, .L8+8
 276 00a6 B3F9A030 		ldrsh	r3, [r3, #160]
 277 00aa 9AB2     		uxth	r2, r3
 278 00ac 154B     		ldr	r3, .L8+12
 279 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 00b0 9BB2     		uxth	r3, r3
 281 00b2 D31A     		subs	r3, r2, r3
 282 00b4 FB82     		strh	r3, [r7, #22]	@ movhi
 283              	.L6:
 105:../source/FSK_Demodulator.c **** 	}
 106:../source/FSK_Demodulator.c **** 	aux *= (FSK_signal.buffer)[aux_index];
 284              		.loc 1 106 0
 285 00b6 FB8A     		ldrh	r3, [r7, #22]
 286 00b8 0F4A     		ldr	r2, .L8
 287 00ba 9B00     		lsls	r3, r3, #2
 288 00bc 1344     		add	r3, r3, r2
 289 00be D3ED007A 		vldr.32	s15, [r3]
 290 00c2 97ED047A 		vldr.32	s14, [r7, #16]
 291 00c6 67EE277A 		vmul.f32	s15, s14, s15
 292 00ca C7ED047A 		vstr.32	s15, [r7, #16]
 107:../source/FSK_Demodulator.c **** 	(PreFiltered_signal.buffer)[PreFiltered_signal.curr] = aux;
 293              		.loc 1 107 0
 294 00ce 0C4B     		ldr	r3, .L8+8
 295 00d0 B3F9A030 		ldrsh	r3, [r3, #160]
 296 00d4 0A4A     		ldr	r2, .L8+8
 297 00d6 9B00     		lsls	r3, r3, #2
 298 00d8 1344     		add	r3, r3, r2
 299 00da 3A69     		ldr	r2, [r7, #16]	@ float
 300 00dc 1A60     		str	r2, [r3]	@ float
 108:../source/FSK_Demodulator.c **** 
 109:../source/FSK_Demodulator.c **** 	//Update result
 110:../source/FSK_Demodulator.c **** 	comp_out = ApplyFIR();
 301              		.loc 1 110 0
 302 00de FFF7FEFF 		bl	ApplyFIR
 303 00e2 87ED030A 		vstr.32	s0, [r7, #12]
 111:../source/FSK_Demodulator.c **** 	//Gets bitstream values.
 112:../source/FSK_Demodulator.c **** 	return ReconstructSignal(comp_out);
 304              		.loc 1 112 0
 305 00e6 97ED030A 		vldr.32	s0, [r7, #12]
 306 00ea FFF7FEFF 		bl	ReconstructSignal
 307 00ee 0346     		mov	r3, r0
 113:../source/FSK_Demodulator.c **** }
 308              		.loc 1 113 0
 309 00f0 1846     		mov	r0, r3
 310 00f2 1837     		adds	r7, r7, #24
 311              		.cfi_def_cfa_offset 8
 312 00f4 BD46     		mov	sp, r7
 313              		.cfi_def_cfa_register 13
 314              		@ sp needed
 315 00f6 80BD     		pop	{r7, pc}
 316              	.L9:
 317              		.align	2
 318              	.L8:
 319 00f8 00000000 		.word	FSK_signal
 320 00fc 67666666 		.word	1717986919
 321 0100 00000000 		.word	PreFiltered_signal
 322 0104 00000000 		.word	prev_samples
 323              		.cfi_endproc
 324              	.LFE1:
 326              		.section	.text.ApplyFIR,"ax",%progbits
 327              		.align	1
 328              		.global	ApplyFIR
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 332              		.fpu fpv4-sp-d16
 334              	ApplyFIR:
 335              	.LFB2:
 114:../source/FSK_Demodulator.c **** 
 115:../source/FSK_Demodulator.c **** /***********************************************************
 116:../source/FSK_Demodulator.c ****  * 				FUNCTIONS WITH LOCAL SCOPE
 117:../source/FSK_Demodulator.c ****  ***********************************************************/
 118:../source/FSK_Demodulator.c **** float ApplyFIR(void)
 119:../source/FSK_Demodulator.c **** {
 336              		.loc 1 119 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 16
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341 0000 80B4     		push	{r7}
 342              		.cfi_def_cfa_offset 4
 343              		.cfi_offset 7, -4
 344 0002 85B0     		sub	sp, sp, #20
 345              		.cfi_def_cfa_offset 24
 346 0004 00AF     		add	r7, sp, #0
 347              		.cfi_def_cfa_register 7
 120:../source/FSK_Demodulator.c **** 	int j=0;
 348              		.loc 1 120 0
 349 0006 0023     		movs	r3, #0
 350 0008 FB60     		str	r3, [r7, #12]
 121:../source/FSK_Demodulator.c **** 	uint16_t aux_index = 0;
 351              		.loc 1 121 0
 352 000a 0023     		movs	r3, #0
 353 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 122:../source/FSK_Demodulator.c **** 	float aux = 0;
 354              		.loc 1 122 0
 355 000e 4FF00003 		mov	r3, #0
 356 0012 7B60     		str	r3, [r7, #4]	@ float
 123:../source/FSK_Demodulator.c **** 
 124:../source/FSK_Demodulator.c **** 
 125:../source/FSK_Demodulator.c **** 	for(j=0; j< FIR_ORDER+1; j++)
 357              		.loc 1 125 0
 358 0014 0023     		movs	r3, #0
 359 0016 FB60     		str	r3, [r7, #12]
 360 0018 31E0     		b	.L11
 361              	.L14:
 126:../source/FSK_Demodulator.c **** 	{
 127:../source/FSK_Demodulator.c **** 		if( (PreFiltered_signal.curr-j)<0 )
 362              		.loc 1 127 0
 363 001a 354B     		ldr	r3, .L25
 364 001c B3F9A030 		ldrsh	r3, [r3, #160]
 365 0020 1A46     		mov	r2, r3
 366 0022 FB68     		ldr	r3, [r7, #12]
 367 0024 D31A     		subs	r3, r2, r3
 368 0026 002B     		cmp	r3, #0
 369 0028 0ADA     		bge	.L12
 128:../source/FSK_Demodulator.c **** 		{
 129:../source/FSK_Demodulator.c **** 			aux_index = CIRCULAR_BUFFER_SIZE + (PreFiltered_signal.curr-j);
 370              		.loc 1 129 0
 371 002a 314B     		ldr	r3, .L25
 372 002c B3F9A030 		ldrsh	r3, [r3, #160]
 373 0030 9AB2     		uxth	r2, r3
 374 0032 FB68     		ldr	r3, [r7, #12]
 375 0034 9BB2     		uxth	r3, r3
 376 0036 D31A     		subs	r3, r2, r3
 377 0038 9BB2     		uxth	r3, r3
 378 003a 2833     		adds	r3, r3, #40
 379 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 380 003e 07E0     		b	.L13
 381              	.L12:
 130:../source/FSK_Demodulator.c **** 		}
 131:../source/FSK_Demodulator.c **** 		else
 132:../source/FSK_Demodulator.c **** 		{
 133:../source/FSK_Demodulator.c **** 			aux_index = PreFiltered_signal.curr-j;
 382              		.loc 1 133 0
 383 0040 2B4B     		ldr	r3, .L25
 384 0042 B3F9A030 		ldrsh	r3, [r3, #160]
 385 0046 9AB2     		uxth	r2, r3
 386 0048 FB68     		ldr	r3, [r7, #12]
 387 004a 9BB2     		uxth	r3, r3
 388 004c D31A     		subs	r3, r2, r3
 389 004e 7B81     		strh	r3, [r7, #10]	@ movhi
 390              	.L13:
 134:../source/FSK_Demodulator.c **** 		}
 135:../source/FSK_Demodulator.c **** 		aux += ( fir_coeffs[j] ) * ( (PreFiltered_signal.buffer)[aux_index] );
 391              		.loc 1 135 0 discriminator 2
 392 0050 284A     		ldr	r2, .L25+4
 393 0052 FB68     		ldr	r3, [r7, #12]
 394 0054 9B00     		lsls	r3, r3, #2
 395 0056 1344     		add	r3, r3, r2
 396 0058 93ED007A 		vldr.32	s14, [r3]
 397 005c 7B89     		ldrh	r3, [r7, #10]
 398 005e 244A     		ldr	r2, .L25
 399 0060 9B00     		lsls	r3, r3, #2
 400 0062 1344     		add	r3, r3, r2
 401 0064 D3ED007A 		vldr.32	s15, [r3]
 402 0068 67EE277A 		vmul.f32	s15, s14, s15
 403 006c 97ED017A 		vldr.32	s14, [r7, #4]
 404 0070 77EE277A 		vadd.f32	s15, s14, s15
 405 0074 C7ED017A 		vstr.32	s15, [r7, #4]
 125:../source/FSK_Demodulator.c **** 	{
 406              		.loc 1 125 0 discriminator 2
 407 0078 FB68     		ldr	r3, [r7, #12]
 408 007a 0133     		adds	r3, r3, #1
 409 007c FB60     		str	r3, [r7, #12]
 410              	.L11:
 125:../source/FSK_Demodulator.c **** 	{
 411              		.loc 1 125 0 is_stmt 0 discriminator 1
 412 007e FB68     		ldr	r3, [r7, #12]
 413 0080 122B     		cmp	r3, #18
 414 0082 CADD     		ble	.L14
 136:../source/FSK_Demodulator.c **** 	}
 137:../source/FSK_Demodulator.c **** 	//ApplyComparator
 138:../source/FSK_Demodulator.c **** 	if( last_fir_output == 0)
 415              		.loc 1 138 0 is_stmt 1
 416 0084 1C4B     		ldr	r3, .L25+8
 417 0086 D3ED007A 		vldr.32	s15, [r3]
 418 008a F5EE407A 		vcmp.f32	s15, #0
 419 008e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 420 0092 12D1     		bne	.L15
 139:../source/FSK_Demodulator.c **** 	{
 140:../source/FSK_Demodulator.c **** 		if( aux < VLOW )
 421              		.loc 1 140 0
 422 0094 D7ED017A 		vldr.32	s15, [r7, #4]
 423 0098 BDEE007A 		vmov.f32	s14, #-2.5e-1
 424 009c F4EEC77A 		vcmpe.f32	s15, s14
 425 00a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 426 00a4 06D5     		bpl	.L23
 141:../source/FSK_Demodulator.c **** 		{
 142:../source/FSK_Demodulator.c **** 			last_fir_output = 1;
 427              		.loc 1 142 0
 428 00a6 144B     		ldr	r3, .L25+8
 429 00a8 4FF07E52 		mov	r2, #1065353216
 430 00ac 1A60     		str	r2, [r3]	@ float
 143:../source/FSK_Demodulator.c **** 			return 1;
 431              		.loc 1 143 0
 432 00ae 4FF07E53 		mov	r3, #1065353216
 433 00b2 14E0     		b	.L18
 434              	.L23:
 144:../source/FSK_Demodulator.c **** 		}
 145:../source/FSK_Demodulator.c **** 		else
 146:../source/FSK_Demodulator.c **** 		{
 147:../source/FSK_Demodulator.c **** 			return 0;
 435              		.loc 1 147 0
 436 00b4 4FF00003 		mov	r3, #0
 437 00b8 11E0     		b	.L18
 438              	.L15:
 148:../source/FSK_Demodulator.c **** 		}
 149:../source/FSK_Demodulator.c **** 	}
 150:../source/FSK_Demodulator.c **** 	else
 151:../source/FSK_Demodulator.c **** 	{
 152:../source/FSK_Demodulator.c **** 		if( aux > VHIGH )
 439              		.loc 1 152 0
 440 00ba D7ED017A 		vldr.32	s15, [r7, #4]
 441 00be B5EE007A 		vmov.f32	s14, #2.5e-1
 442 00c2 F4EEC77A 		vcmpe.f32	s15, s14
 443 00c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 444 00ca 06DD     		ble	.L24
 153:../source/FSK_Demodulator.c **** 		{
 154:../source/FSK_Demodulator.c **** 			last_fir_output = 0;
 445              		.loc 1 154 0
 446 00cc 0A4B     		ldr	r3, .L25+8
 447 00ce 4FF00002 		mov	r2, #0
 448 00d2 1A60     		str	r2, [r3]	@ float
 155:../source/FSK_Demodulator.c **** 			return 0;
 449              		.loc 1 155 0
 450 00d4 4FF00003 		mov	r3, #0
 451 00d8 01E0     		b	.L18
 452              	.L24:
 156:../source/FSK_Demodulator.c **** 		}
 157:../source/FSK_Demodulator.c **** 		else
 158:../source/FSK_Demodulator.c **** 		{
 159:../source/FSK_Demodulator.c **** 			return 1;
 453              		.loc 1 159 0
 454 00da 4FF07E53 		mov	r3, #1065353216
 455              	.L18:
 456 00de 07EE903A 		vmov	s15, r3
 160:../source/FSK_Demodulator.c **** 		}
 161:../source/FSK_Demodulator.c **** 	}
 162:../source/FSK_Demodulator.c **** 
 163:../source/FSK_Demodulator.c **** 	return;
 164:../source/FSK_Demodulator.c **** }
 457              		.loc 1 164 0
 458 00e2 B0EE670A 		vmov.f32	s0, s15
 459 00e6 1437     		adds	r7, r7, #20
 460              		.cfi_def_cfa_offset 4
 461 00e8 BD46     		mov	sp, r7
 462              		.cfi_def_cfa_register 13
 463              		@ sp needed
 464 00ea 5DF8047B 		ldr	r7, [sp], #4
 465              		.cfi_restore 7
 466              		.cfi_def_cfa_offset 0
 467 00ee 7047     		bx	lr
 468              	.L26:
 469              		.align	2
 470              	.L25:
 471 00f0 00000000 		.word	PreFiltered_signal
 472 00f4 00000000 		.word	fir_coeffs
 473 00f8 00000000 		.word	last_fir_output
 474              		.cfi_endproc
 475              	.LFE2:
 477              		.section	.text.ReconstructSignal,"ax",%progbits
 478              		.align	1
 479              		.global	ReconstructSignal
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu fpv4-sp-d16
 485              	ReconstructSignal:
 486              	.LFB3:
 165:../source/FSK_Demodulator.c **** 
 166:../source/FSK_Demodulator.c **** int8_t ReconstructSignal(float comp_out)
 167:../source/FSK_Demodulator.c **** {
 487              		.loc 1 167 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 8
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492 0000 80B4     		push	{r7}
 493              		.cfi_def_cfa_offset 4
 494              		.cfi_offset 7, -4
 495 0002 83B0     		sub	sp, sp, #12
 496              		.cfi_def_cfa_offset 16
 497 0004 00AF     		add	r7, sp, #0
 498              		.cfi_def_cfa_register 7
 499 0006 87ED010A 		vstr.32	s0, [r7, #4]
 168:../source/FSK_Demodulator.c **** 	if(idle)
 500              		.loc 1 168 0
 501 000a 3F4B     		ldr	r3, .L38
 502 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 503 000e 002B     		cmp	r3, #0
 504 0010 21D0     		beq	.L28
 169:../source/FSK_Demodulator.c **** 	{
 170:../source/FSK_Demodulator.c **** 		if( comp_out)
 505              		.loc 1 170 0
 506 0012 D7ED017A 		vldr.32	s15, [r7, #4]
 507 0016 F5EE407A 		vcmp.f32	s15, #0
 508 001a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 509 001e 0ED0     		beq	.L29
 171:../source/FSK_Demodulator.c **** 		{
 172:../source/FSK_Demodulator.c **** 			if(++sample_counter == AVG_SAMPLES)
 510              		.loc 1 172 0
 511 0020 3A4B     		ldr	r3, .L38+4
 512 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 513 0024 0133     		adds	r3, r3, #1
 514 0026 DAB2     		uxtb	r2, r3
 515 0028 384B     		ldr	r3, .L38+4
 516 002a 1A70     		strb	r2, [r3]
 517 002c 374B     		ldr	r3, .L38+4
 518 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 519 0030 0A2B     		cmp	r3, #10
 520 0032 62D1     		bne	.L30
 173:../source/FSK_Demodulator.c **** 			{
 174:../source/FSK_Demodulator.c **** 				sample_counter = 0;
 521              		.loc 1 174 0
 522 0034 354B     		ldr	r3, .L38+4
 523 0036 0022     		movs	r2, #0
 524 0038 1A70     		strb	r2, [r3]
 175:../source/FSK_Demodulator.c **** 				return 1;
 525              		.loc 1 175 0
 526 003a 0123     		movs	r3, #1
 527 003c 5DE0     		b	.L27
 528              	.L29:
 176:../source/FSK_Demodulator.c **** 			}
 177:../source/FSK_Demodulator.c **** 		}
 178:../source/FSK_Demodulator.c **** 		else
 179:../source/FSK_Demodulator.c **** 		{
 180:../source/FSK_Demodulator.c **** 			idle = false;
 529              		.loc 1 180 0
 530 003e 324B     		ldr	r3, .L38
 531 0040 0022     		movs	r2, #0
 532 0042 1A70     		strb	r2, [r3]
 181:../source/FSK_Demodulator.c **** 			idle_counter = false;
 533              		.loc 1 181 0
 534 0044 324B     		ldr	r3, .L38+8
 535 0046 0022     		movs	r2, #0
 536 0048 1A70     		strb	r2, [r3]
 182:../source/FSK_Demodulator.c **** 			sample_counter = 1;
 537              		.loc 1 182 0
 538 004a 304B     		ldr	r3, .L38+4
 539 004c 0122     		movs	r2, #1
 540 004e 1A70     		strb	r2, [r3]
 183:../source/FSK_Demodulator.c **** 			return -1;
 541              		.loc 1 183 0
 542 0050 4FF0FF33 		mov	r3, #-1
 543 0054 51E0     		b	.L27
 544              	.L28:
 184:../source/FSK_Demodulator.c **** 		}
 185:../source/FSK_Demodulator.c **** 	}
 186:../source/FSK_Demodulator.c **** 	else
 187:../source/FSK_Demodulator.c **** 	{
 188:../source/FSK_Demodulator.c **** 		average_aux += comp_out;
 545              		.loc 1 188 0
 546 0056 2F4B     		ldr	r3, .L38+12
 547 0058 93ED007A 		vldr.32	s14, [r3]
 548 005c D7ED017A 		vldr.32	s15, [r7, #4]
 549 0060 77EE277A 		vadd.f32	s15, s14, s15
 550 0064 2B4B     		ldr	r3, .L38+12
 551 0066 C3ED007A 		vstr.32	s15, [r3]
 189:../source/FSK_Demodulator.c **** 		if( (++sample_counter) == AVG_SAMPLES)
 552              		.loc 1 189 0
 553 006a 284B     		ldr	r3, .L38+4
 554 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 555 006e 0133     		adds	r3, r3, #1
 556 0070 DAB2     		uxtb	r2, r3
 557 0072 264B     		ldr	r3, .L38+4
 558 0074 1A70     		strb	r2, [r3]
 559 0076 254B     		ldr	r3, .L38+4
 560 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 561 007a 0A2B     		cmp	r3, #10
 562 007c 3AD1     		bne	.L32
 190:../source/FSK_Demodulator.c **** 		{
 191:../source/FSK_Demodulator.c **** 			sample_counter = 0;
 563              		.loc 1 191 0
 564 007e 234B     		ldr	r3, .L38+4
 565 0080 0022     		movs	r2, #0
 566 0082 1A70     		strb	r2, [r3]
 192:../source/FSK_Demodulator.c **** 			average_aux /= AVG_SAMPLES;
 567              		.loc 1 192 0
 568 0084 234B     		ldr	r3, .L38+12
 569 0086 93ED007A 		vldr.32	s14, [r3]
 570 008a F2EE046A 		vmov.f32	s13, #1.0e+1
 571 008e C7EE267A 		vdiv.f32	s15, s14, s13
 572 0092 204B     		ldr	r3, .L38+12
 573 0094 C3ED007A 		vstr.32	s15, [r3]
 193:../source/FSK_Demodulator.c **** 			if( average_aux >= MID )
 574              		.loc 1 193 0
 575 0098 1E4B     		ldr	r3, .L38+12
 576 009a D3ED007A 		vldr.32	s15, [r3]
 577 009e B6EE007A 		vmov.f32	s14, #5.0e-1
 578 00a2 F4EEC77A 		vcmpe.f32	s15, s14
 579 00a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 580 00aa 16DB     		blt	.L37
 194:../source/FSK_Demodulator.c **** 			{
 195:../source/FSK_Demodulator.c **** 				last_sample_value = 1;
 581              		.loc 1 195 0
 582 00ac 1A4B     		ldr	r3, .L38+16
 583 00ae 4FF07E52 		mov	r2, #1065353216
 584 00b2 1A60     		str	r2, [r3]	@ float
 196:../source/FSK_Demodulator.c **** 				if( (++idle_counter) == IDLE_LIMIT )
 585              		.loc 1 196 0
 586 00b4 164B     		ldr	r3, .L38+8
 587 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 588 00b8 0133     		adds	r3, r3, #1
 589 00ba DAB2     		uxtb	r2, r3
 590 00bc 144B     		ldr	r3, .L38+8
 591 00be 1A70     		strb	r2, [r3]
 592 00c0 134B     		ldr	r3, .L38+8
 593 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 594 00c4 082B     		cmp	r3, #8
 595 00c6 02D1     		bne	.L35
 197:../source/FSK_Demodulator.c **** 					idle = true;
 596              		.loc 1 197 0
 597 00c8 0F4B     		ldr	r3, .L38
 598 00ca 0122     		movs	r2, #1
 599 00cc 1A70     		strb	r2, [r3]
 600              	.L35:
 198:../source/FSK_Demodulator.c **** 				average_aux = 0;
 601              		.loc 1 198 0
 602 00ce 114B     		ldr	r3, .L38+12
 603 00d0 4FF00002 		mov	r2, #0
 604 00d4 1A60     		str	r2, [r3]	@ float
 199:../source/FSK_Demodulator.c **** 				return 1;
 605              		.loc 1 199 0
 606 00d6 0123     		movs	r3, #1
 607 00d8 0FE0     		b	.L27
 608              	.L37:
 200:../source/FSK_Demodulator.c **** 			}
 201:../source/FSK_Demodulator.c **** 			else
 202:../source/FSK_Demodulator.c **** 			{
 203:../source/FSK_Demodulator.c **** 				last_sample_value = 0;
 609              		.loc 1 203 0
 610 00da 0F4B     		ldr	r3, .L38+16
 611 00dc 4FF00002 		mov	r2, #0
 612 00e0 1A60     		str	r2, [r3]	@ float
 204:../source/FSK_Demodulator.c **** 				idle_counter = 0;
 613              		.loc 1 204 0
 614 00e2 0B4B     		ldr	r3, .L38+8
 615 00e4 0022     		movs	r2, #0
 616 00e6 1A70     		strb	r2, [r3]
 205:../source/FSK_Demodulator.c **** 				average_aux = 0;
 617              		.loc 1 205 0
 618 00e8 0A4B     		ldr	r3, .L38+12
 619 00ea 4FF00002 		mov	r2, #0
 620 00ee 1A60     		str	r2, [r3]	@ float
 206:../source/FSK_Demodulator.c **** 				return 0;
 621              		.loc 1 206 0
 622 00f0 0023     		movs	r3, #0
 623 00f2 02E0     		b	.L27
 624              	.L32:
 207:../source/FSK_Demodulator.c **** 			}
 208:../source/FSK_Demodulator.c **** 		}
 209:../source/FSK_Demodulator.c **** 		else
 210:../source/FSK_Demodulator.c **** 		{
 211:../source/FSK_Demodulator.c **** 			return -1;
 625              		.loc 1 211 0
 626 00f4 4FF0FF33 		mov	r3, #-1
 627 00f8 FFE7     		b	.L27
 628              	.L30:
 629              	.L27:
 212:../source/FSK_Demodulator.c **** 		}
 213:../source/FSK_Demodulator.c **** 
 214:../source/FSK_Demodulator.c **** 	}
 215:../source/FSK_Demodulator.c **** 
 216:../source/FSK_Demodulator.c **** 
 217:../source/FSK_Demodulator.c **** }
 630              		.loc 1 217 0
 631 00fa 1846     		mov	r0, r3
 632 00fc 0C37     		adds	r7, r7, #12
 633              		.cfi_def_cfa_offset 4
 634 00fe BD46     		mov	sp, r7
 635              		.cfi_def_cfa_register 13
 636              		@ sp needed
 637 0100 5DF8047B 		ldr	r7, [sp], #4
 638              		.cfi_restore 7
 639              		.cfi_def_cfa_offset 0
 640 0104 7047     		bx	lr
 641              	.L39:
 642 0106 00BF     		.align	2
 643              	.L38:
 644 0108 00000000 		.word	idle
 645 010c 00000000 		.word	sample_counter
 646 0110 00000000 		.word	idle_counter
 647 0114 00000000 		.word	average_aux
 648 0118 00000000 		.word	last_sample_value
 649              		.cfi_endproc
 650              	.LFE3:
 652              		.text
 653              	.Letext0:
 654              		.file 2 "c:\\nxp\\mcuxpressoide_10.2.0_759\\ide\\tools\\redlib\\include\\sys\\libconfig-arm.h"
 655              		.file 3 "c:\\nxp\\mcuxpressoide_10.2.0_759\\ide\\tools\\redlib\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 FSK_Demodulator.c
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:18     .bss.FSK_signal:00000000 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:21     .bss.FSK_signal:00000000 FSK_signal
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:24     .bss.PreFiltered_signal:00000000 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:27     .bss.PreFiltered_signal:00000000 PreFiltered_signal
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:30     .data.last_fir_output:00000000 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:33     .data.last_fir_output:00000000 last_fir_output
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:36     .bss.last_sample_value:00000000 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:39     .bss.last_sample_value:00000000 last_sample_value
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:42     .bss.average_aux:00000000 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:45     .bss.average_aux:00000000 average_aux
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:50     .bss.sample_counter:00000000 sample_counter
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:51     .bss.sample_counter:00000000 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:55     .bss.idle_counter:00000000 idle_counter
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:56     .bss.idle_counter:00000000 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:60     .data.idle:00000000 idle
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:63     .bss.fs:00000000 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:66     .bss.fs:00000000 fs
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:71     .bss.prev_samples:00000000 prev_samples
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:72     .bss.prev_samples:00000000 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:74     .data.fir_coeffs:00000000 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:77     .data.fir_coeffs:00000000 fir_coeffs
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:101    .text.DemodulatorInit:00000000 $t
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:108    .text.DemodulatorInit:00000000 DemodulatorInit
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:165    .text.DemodulatorInit:00000058 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:176    .text.DemodulateSignal:00000000 $t
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:183    .text.DemodulateSignal:00000000 DemodulateSignal
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:334    .text.ApplyFIR:00000000 ApplyFIR
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:485    .text.ReconstructSignal:00000000 ReconstructSignal
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:319    .text.DemodulateSignal:000000f8 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:327    .text.ApplyFIR:00000000 $t
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:471    .text.ApplyFIR:000000f0 $d
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:478    .text.ReconstructSignal:00000000 $t
C:\Users\HP\AppData\Local\Temp\cccB82lg.s:644    .text.ReconstructSignal:00000108 $d
                           .group:00000000 wm4.0.33db8b643112917ec54934b4f2c2f387
                           .group:00000000 wm4.redlib_version.h.16.f905717e4b3a91dcbdbb631865150df4
                           .group:00000000 wm4.libconfigarm.h.18.1ad1d24f96d0dc8c4cf52dc19b0aa2c7
                           .group:00000000 wm4.stdint.h.30.079ac5d9930c76ab215c1ab68adcbe08
                           .group:00000000 wm4.stdbool.h.15.fddf1cb2402fd739d8e2516677869231

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_dmul
__aeabi_d2uiz
