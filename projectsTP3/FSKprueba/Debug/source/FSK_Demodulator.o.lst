   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"FSK_Demodulator.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.FSK_signal,"aw",%nobits
  18              		.align	2
  21              	FSK_signal:
  22 0000 00000000 		.space	324
  22      00000000 
  22      00000000 
  22      00000000 
  22      00000000 
  23              		.section	.bss.PreFiltered_signal,"aw",%nobits
  24              		.align	2
  27              	PreFiltered_signal:
  28 0000 00000000 		.space	324
  28      00000000 
  28      00000000 
  28      00000000 
  28      00000000 
  29              		.section	.bss.result_signal,"aw",%nobits
  30              		.align	2
  33              	result_signal:
  34 0000 00000000 		.space	324
  34      00000000 
  34      00000000 
  34      00000000 
  34      00000000 
  35              		.section	.bss.fs,"aw",%nobits
  36              		.align	2
  39              	fs:
  40 0000 00000000 		.space	4
  41              		.section	.bss.prev_samples,"aw",%nobits
  44              	prev_samples:
  45 0000 00       		.space	1
  46              		.section	.data.fir_coeffs,"aw",%progbits
  47              		.align	2
  50              	fir_coeffs:
  51 0000 750F233C 		.word	1008930677
  52 0004 BC98D33C 		.word	1020500156
  53 0008 0D62AB3B 		.word	1001087501
  54 000c 147AA8BC 		.word	-1129809388
  55 0010 18DC4DBD 		.word	-1118970856
  56 0014 58BB21BD 		.word	-1121862824
  57 0018 43BAF73C 		.word	1022868035
  58 001c 814F153E 		.word	1041584001
  59 0020 DB79823E 		.word	1048738267
  60 0024 6170993E 		.word	1050243169
  61 0028 DB79823E 		.word	1048738267
  62 002c 814F153E 		.word	1041584001
  63 0030 43BAF73C 		.word	1022868035
  64 0034 58BB21BD 		.word	-1121862824
  65 0038 18DC4DBD 		.word	-1118970856
  66 003c 147AA8BC 		.word	-1129809388
  67 0040 0D62AB3B 		.word	1001087501
  68 0044 BC98D33C 		.word	1020500156
  69 0048 750F233C 		.word	1008930677
  70              		.global	__aeabi_ui2d
  71              		.global	__aeabi_dmul
  72              		.global	__aeabi_d2uiz
  73              		.section	.text.DemodulatorInit,"ax",%progbits
  74              		.align	1
  75              		.global	DemodulatorInit
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu fpv4-sp-d16
  81              	DemodulatorInit:
  82              	.LFB0:
  83              		.file 1 "../source/FSK_Demodulator.c"
   1:../source/FSK_Demodulator.c **** /*
   2:../source/FSK_Demodulator.c ****  * FSK_Demodulator.c
   3:../source/FSK_Demodulator.c ****  *
   4:../source/FSK_Demodulator.c ****  *  Created on: Oct 19, 2019
   5:../source/FSK_Demodulator.c ****  *      Author: G5
   6:../source/FSK_Demodulator.c ****  */
   7:../source/FSK_Demodulator.c **** 
   8:../source/FSK_Demodulator.c **** #include "FSK_Demodulator.h"
   9:../source/FSK_Demodulator.c **** /***********************************************************
  10:../source/FSK_Demodulator.c ****  *					 DEFINES AND MACROS
  11:../source/FSK_Demodulator.c ****  ***********************************************************/
  12:../source/FSK_Demodulator.c **** #define FL 1200	//Frequency of a logical '1'
  13:../source/FSK_Demodulator.c **** #define FH 2200	//Frequency of a logical '0'
  14:../source/FSK_Demodulator.c **** #define DELAY 0.0004464 //Delay optimo en s
  15:../source/FSK_Demodulator.c **** #define VLOW -0.25
  16:../source/FSK_Demodulator.c **** #define VHIGH 0.25
  17:../source/FSK_Demodulator.c **** #define FIR_ORDER 18
  18:../source/FSK_Demodulator.c **** //Size of Buffers
  19:../source/FSK_Demodulator.c **** #define CIRCULAR_BUFFER_SIZE 80
  20:../source/FSK_Demodulator.c **** 
  21:../source/FSK_Demodulator.c **** typedef struct{
  22:../source/FSK_Demodulator.c **** 	float buffer[CIRCULAR_BUFFER_SIZE];
  23:../source/FSK_Demodulator.c **** 	int16_t curr; //indice del ultimo elemento agregado
  24:../source/FSK_Demodulator.c **** }circular_buffer_t;
  25:../source/FSK_Demodulator.c **** /***********************************************************
  26:../source/FSK_Demodulator.c ****  * 				VARIABLES WITH GLOBAL SCOPE
  27:../source/FSK_Demodulator.c ****  ***********************************************************/
  28:../source/FSK_Demodulator.c **** static circular_buffer_t FSK_signal;
  29:../source/FSK_Demodulator.c **** static circular_buffer_t PreFiltered_signal;
  30:../source/FSK_Demodulator.c **** static circular_buffer_t result_signal;
  31:../source/FSK_Demodulator.c **** 
  32:../source/FSK_Demodulator.c **** 
  33:../source/FSK_Demodulator.c **** static uint32_t fs; //Sample frequency of the FSK signal
  34:../source/FSK_Demodulator.c **** static uint8_t prev_samples; //number of samples acorrding to the delay and the fs.
  35:../source/FSK_Demodulator.c **** static float fir_coeffs[] = {0.0099524156275609069, 0.025829664997474223, 0.0052301942208776179,
  36:../source/FSK_Demodulator.c **** 							-0.020566023428597952, -0.050258725765821938, -0.039485305772910186,
  37:../source/FSK_Demodulator.c **** 							0.030240182765554114, 0.14581109542716533, 0.2548359331518294,
  38:../source/FSK_Demodulator.c **** 							0.29968551708002261, 0.2548359331518294, 0.14581109542716533,
  39:../source/FSK_Demodulator.c **** 							0.030240182765554114, -0.039485305772910186, -0.050258725765821938,
  40:../source/FSK_Demodulator.c **** 							-0.020566023428597952, 0.0052301942208776179, 0.025829664997474223,
  41:../source/FSK_Demodulator.c **** 							0.0099524156275609069};
  42:../source/FSK_Demodulator.c **** 
  43:../source/FSK_Demodulator.c **** 
  44:../source/FSK_Demodulator.c **** 
  45:../source/FSK_Demodulator.c **** /***********************************************************
  46:../source/FSK_Demodulator.c ****  * 				LOCAL FUNCTIONS DECLARATIONS
  47:../source/FSK_Demodulator.c ****  ***********************************************************/
  48:../source/FSK_Demodulator.c **** 
  49:../source/FSK_Demodulator.c **** /**
  50:../source/FSK_Demodulator.c ****  * @brief Applys FIR filter and stores the results
  51:../source/FSK_Demodulator.c ****  * @param cant Number of values to calculate
  52:../source/FSK_Demodulator.c **** */
  53:../source/FSK_Demodulator.c **** void ApplyFIR(uint8_t cant);
  54:../source/FSK_Demodulator.c **** 
  55:../source/FSK_Demodulator.c **** /***********************************************************
  56:../source/FSK_Demodulator.c ****  * 				FUNCTIONS WITH GLOBAL SCOPE
  57:../source/FSK_Demodulator.c ****  ***********************************************************/
  58:../source/FSK_Demodulator.c **** void DemodulatorInit(uint32_t fs_)
  59:../source/FSK_Demodulator.c **** {
  84              		.loc 1 59 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 16
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 90B5     		push	{r4, r7, lr}
  89              		.cfi_def_cfa_offset 12
  90              		.cfi_offset 4, -12
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 85B0     		sub	sp, sp, #20
  94              		.cfi_def_cfa_offset 32
  95 0004 00AF     		add	r7, sp, #0
  96              		.cfi_def_cfa_register 7
  97 0006 7860     		str	r0, [r7, #4]
  60:../source/FSK_Demodulator.c **** 	int i =0;
  98              		.loc 1 60 0
  99 0008 0023     		movs	r3, #0
 100 000a FB60     		str	r3, [r7, #12]
  61:../source/FSK_Demodulator.c **** 	fs = fs_;
 101              		.loc 1 61 0
 102 000c 1E4A     		ldr	r2, .L4+8
 103 000e 7B68     		ldr	r3, [r7, #4]
 104 0010 1360     		str	r3, [r2]
  62:../source/FSK_Demodulator.c **** 	FSK_signal.curr = -1;
 105              		.loc 1 62 0
 106 0012 1E4B     		ldr	r3, .L4+12
 107 0014 4FF6FF72 		movw	r2, #65535
 108 0018 A3F84021 		strh	r2, [r3, #320]	@ movhi
  63:../source/FSK_Demodulator.c **** 	PreFiltered_signal.curr = -1;
 109              		.loc 1 63 0
 110 001c 1C4B     		ldr	r3, .L4+16
 111 001e 4FF6FF72 		movw	r2, #65535
 112 0022 A3F84021 		strh	r2, [r3, #320]	@ movhi
  64:../source/FSK_Demodulator.c **** 	result_signal.curr = -1;
 113              		.loc 1 64 0
 114 0026 1B4B     		ldr	r3, .L4+20
 115 0028 4FF6FF72 		movw	r2, #65535
 116 002c A3F84021 		strh	r2, [r3, #320]	@ movhi
  65:../source/FSK_Demodulator.c **** 
  66:../source/FSK_Demodulator.c **** 	prev_samples = (uint8_t)( DELAY*fs);
 117              		.loc 1 66 0
 118 0030 154B     		ldr	r3, .L4+8
 119 0032 1B68     		ldr	r3, [r3]
 120 0034 1846     		mov	r0, r3
 121 0036 FFF7FEFF 		bl	__aeabi_ui2d
 122              	.LVL0:
 123 003a 11A3     		adr	r3, .L4
 124 003c D3E90023 		ldrd	r2, [r3]
 125 0040 FFF7FEFF 		bl	__aeabi_dmul
 126              	.LVL1:
 127 0044 0346     		mov	r3, r0
 128 0046 0C46     		mov	r4, r1
 129 0048 1846     		mov	r0, r3
 130 004a 2146     		mov	r1, r4
 131 004c FFF7FEFF 		bl	__aeabi_d2uiz
 132              	.LVL2:
 133 0050 0346     		mov	r3, r0
 134 0052 DAB2     		uxtb	r2, r3
 135 0054 104B     		ldr	r3, .L4+24
 136 0056 1A70     		strb	r2, [r3]
  67:../source/FSK_Demodulator.c **** 	for(i=0; i< CIRCULAR_BUFFER_SIZE; i++)
 137              		.loc 1 67 0
 138 0058 0023     		movs	r3, #0
 139 005a FB60     		str	r3, [r7, #12]
 140 005c 09E0     		b	.L2
 141              	.L3:
  68:../source/FSK_Demodulator.c **** 	{
  69:../source/FSK_Demodulator.c **** 		result_signal.buffer[i] = 1; //By default the initial state is all '1'.
 142              		.loc 1 69 0 discriminator 3
 143 005e 0D4A     		ldr	r2, .L4+20
 144 0060 FB68     		ldr	r3, [r7, #12]
 145 0062 9B00     		lsls	r3, r3, #2
 146 0064 1344     		add	r3, r3, r2
 147 0066 4FF07E52 		mov	r2, #1065353216
 148 006a 1A60     		str	r2, [r3]	@ float
  67:../source/FSK_Demodulator.c **** 	for(i=0; i< CIRCULAR_BUFFER_SIZE; i++)
 149              		.loc 1 67 0 discriminator 3
 150 006c FB68     		ldr	r3, [r7, #12]
 151 006e 0133     		adds	r3, r3, #1
 152 0070 FB60     		str	r3, [r7, #12]
 153              	.L2:
  67:../source/FSK_Demodulator.c **** 	for(i=0; i< CIRCULAR_BUFFER_SIZE; i++)
 154              		.loc 1 67 0 is_stmt 0 discriminator 1
 155 0072 FB68     		ldr	r3, [r7, #12]
 156 0074 4F2B     		cmp	r3, #79
 157 0076 F2DD     		ble	.L3
  70:../source/FSK_Demodulator.c **** 	}
  71:../source/FSK_Demodulator.c **** }
 158              		.loc 1 71 0 is_stmt 1
 159 0078 00BF     		nop
 160 007a 1437     		adds	r7, r7, #20
 161              		.cfi_def_cfa_offset 12
 162 007c BD46     		mov	sp, r7
 163              		.cfi_def_cfa_register 13
 164              		@ sp needed
 165 007e 90BD     		pop	{r4, r7, pc}
 166              	.L5:
 167              		.align	3
 168              	.L4:
 169 0080 08A3A366 		.word	1722000136
 170 0084 59413D3F 		.word	1060979033
 171 0088 00000000 		.word	fs
 172 008c 00000000 		.word	FSK_signal
 173 0090 00000000 		.word	PreFiltered_signal
 174 0094 00000000 		.word	result_signal
 175 0098 00000000 		.word	prev_samples
 176              		.cfi_endproc
 177              	.LFE0:
 179              		.section	.text.DemodulateSignal,"ax",%progbits
 180              		.align	1
 181              		.global	DemodulateSignal
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
 187              	DemodulateSignal:
 188              	.LFB1:
  72:../source/FSK_Demodulator.c **** 
  73:../source/FSK_Demodulator.c **** void DemodulateSignal(float* recieved,uint8_t buffer_size)
  74:../source/FSK_Demodulator.c **** {
 189              		.loc 1 74 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 24
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 80B5     		push	{r7, lr}
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 86B0     		sub	sp, sp, #24
 198              		.cfi_def_cfa_offset 32
 199 0004 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
 201 0006 7860     		str	r0, [r7, #4]
 202 0008 0B46     		mov	r3, r1
 203 000a FB70     		strb	r3, [r7, #3]
  75:../source/FSK_Demodulator.c **** 	float aux = 0;
 204              		.loc 1 75 0
 205 000c 4FF00003 		mov	r3, #0
 206 0010 FB60     		str	r3, [r7, #12]	@ float
  76:../source/FSK_Demodulator.c **** 	int i =0;
 207              		.loc 1 76 0
 208 0012 0023     		movs	r3, #0
 209 0014 7B61     		str	r3, [r7, #20]
  77:../source/FSK_Demodulator.c **** 	uint16_t aux_index = 0;
 210              		.loc 1 77 0
 211 0016 0023     		movs	r3, #0
 212 0018 7B82     		strh	r3, [r7, #18]	@ movhi
  78:../source/FSK_Demodulator.c **** 
  79:../source/FSK_Demodulator.c **** 	//Update FSK Buffer
  80:../source/FSK_Demodulator.c **** 	for(i=0; i<buffer_size; i++)
 213              		.loc 1 80 0
 214 001a 0023     		movs	r3, #0
 215 001c 7B61     		str	r3, [r7, #20]
 216 001e 22E0     		b	.L7
 217              	.L8:
  81:../source/FSK_Demodulator.c **** 	{
  82:../source/FSK_Demodulator.c **** 		FSK_signal.curr = (FSK_signal.curr+1) % CIRCULAR_BUFFER_SIZE;
 218              		.loc 1 82 0 discriminator 3
 219 0020 424B     		ldr	r3, .L13
 220 0022 B3F94031 		ldrsh	r3, [r3, #320]
 221 0026 5A1C     		adds	r2, r3, #1
 222 0028 414B     		ldr	r3, .L13+4
 223 002a 83FB0213 		smull	r1, r3, r3, r2
 224 002e 5911     		asrs	r1, r3, #5
 225 0030 D317     		asrs	r3, r2, #31
 226 0032 C91A     		subs	r1, r1, r3
 227 0034 0B46     		mov	r3, r1
 228 0036 9B00     		lsls	r3, r3, #2
 229 0038 0B44     		add	r3, r3, r1
 230 003a 1B01     		lsls	r3, r3, #4
 231 003c D11A     		subs	r1, r2, r3
 232 003e 0AB2     		sxth	r2, r1
 233 0040 3A4B     		ldr	r3, .L13
 234 0042 A3F84021 		strh	r2, [r3, #320]	@ movhi
  83:../source/FSK_Demodulator.c **** 		(FSK_signal.buffer)[FSK_signal.curr] = recieved[i];
 235              		.loc 1 83 0 discriminator 3
 236 0046 7B69     		ldr	r3, [r7, #20]
 237 0048 9B00     		lsls	r3, r3, #2
 238 004a 7A68     		ldr	r2, [r7, #4]
 239 004c 1344     		add	r3, r3, r2
 240 004e 374A     		ldr	r2, .L13
 241 0050 B2F94021 		ldrsh	r2, [r2, #320]
 242 0054 1046     		mov	r0, r2
 243 0056 1A68     		ldr	r2, [r3]	@ float
 244 0058 3449     		ldr	r1, .L13
 245 005a 8300     		lsls	r3, r0, #2
 246 005c 0B44     		add	r3, r3, r1
 247 005e 1A60     		str	r2, [r3]	@ float
  80:../source/FSK_Demodulator.c **** 	{
 248              		.loc 1 80 0 discriminator 3
 249 0060 7B69     		ldr	r3, [r7, #20]
 250 0062 0133     		adds	r3, r3, #1
 251 0064 7B61     		str	r3, [r7, #20]
 252              	.L7:
  80:../source/FSK_Demodulator.c **** 	{
 253              		.loc 1 80 0 is_stmt 0 discriminator 1
 254 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 255 0068 7A69     		ldr	r2, [r7, #20]
 256 006a 9A42     		cmp	r2, r3
 257 006c D8DB     		blt	.L8
  84:../source/FSK_Demodulator.c **** 	}
  85:../source/FSK_Demodulator.c **** 
  86:../source/FSK_Demodulator.c **** 	//Update PreFiltered Buffer
  87:../source/FSK_Demodulator.c **** 	for(i=0; i<buffer_size; i++)
 258              		.loc 1 87 0 is_stmt 1
 259 006e 0023     		movs	r3, #0
 260 0070 7B61     		str	r3, [r7, #20]
 261 0072 4FE0     		b	.L9
 262              	.L12:
  88:../source/FSK_Demodulator.c **** 	{
  89:../source/FSK_Demodulator.c **** 		PreFiltered_signal.curr = (PreFiltered_signal.curr+1) % CIRCULAR_BUFFER_SIZE;
 263              		.loc 1 89 0
 264 0074 2F4B     		ldr	r3, .L13+8
 265 0076 B3F94031 		ldrsh	r3, [r3, #320]
 266 007a 5A1C     		adds	r2, r3, #1
 267 007c 2C4B     		ldr	r3, .L13+4
 268 007e 83FB0213 		smull	r1, r3, r3, r2
 269 0082 5911     		asrs	r1, r3, #5
 270 0084 D317     		asrs	r3, r2, #31
 271 0086 C91A     		subs	r1, r1, r3
 272 0088 0B46     		mov	r3, r1
 273 008a 9B00     		lsls	r3, r3, #2
 274 008c 0B44     		add	r3, r3, r1
 275 008e 1B01     		lsls	r3, r3, #4
 276 0090 D11A     		subs	r1, r2, r3
 277 0092 0AB2     		sxth	r2, r1
 278 0094 274B     		ldr	r3, .L13+8
 279 0096 A3F84021 		strh	r2, [r3, #320]	@ movhi
  90:../source/FSK_Demodulator.c **** 		aux =  (FSK_signal.buffer)[PreFiltered_signal.curr];
 280              		.loc 1 90 0
 281 009a 264B     		ldr	r3, .L13+8
 282 009c B3F94031 		ldrsh	r3, [r3, #320]
 283 00a0 224A     		ldr	r2, .L13
 284 00a2 9B00     		lsls	r3, r3, #2
 285 00a4 1344     		add	r3, r3, r2
 286 00a6 1B68     		ldr	r3, [r3]	@ float
 287 00a8 FB60     		str	r3, [r7, #12]	@ float
  91:../source/FSK_Demodulator.c **** 		if( (PreFiltered_signal.curr - prev_samples) < 0 )
 288              		.loc 1 91 0
 289 00aa 224B     		ldr	r3, .L13+8
 290 00ac B3F94031 		ldrsh	r3, [r3, #320]
 291 00b0 1A46     		mov	r2, r3
 292 00b2 214B     		ldr	r3, .L13+12
 293 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 294 00b6 D31A     		subs	r3, r2, r3
 295 00b8 002B     		cmp	r3, #0
 296 00ba 0BDA     		bge	.L10
  92:../source/FSK_Demodulator.c **** 		{
  93:../source/FSK_Demodulator.c **** 			aux_index = CIRCULAR_BUFFER_SIZE + (PreFiltered_signal.curr - prev_samples);
 297              		.loc 1 93 0
 298 00bc 1D4B     		ldr	r3, .L13+8
 299 00be B3F94031 		ldrsh	r3, [r3, #320]
 300 00c2 9AB2     		uxth	r2, r3
 301 00c4 1C4B     		ldr	r3, .L13+12
 302 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303 00c8 9BB2     		uxth	r3, r3
 304 00ca D31A     		subs	r3, r2, r3
 305 00cc 9BB2     		uxth	r3, r3
 306 00ce 5033     		adds	r3, r3, #80
 307 00d0 7B82     		strh	r3, [r7, #18]	@ movhi
 308 00d2 08E0     		b	.L11
 309              	.L10:
  94:../source/FSK_Demodulator.c **** 		}
  95:../source/FSK_Demodulator.c **** 		else
  96:../source/FSK_Demodulator.c **** 		{
  97:../source/FSK_Demodulator.c **** 			aux_index = PreFiltered_signal.curr - prev_samples;
 310              		.loc 1 97 0
 311 00d4 174B     		ldr	r3, .L13+8
 312 00d6 B3F94031 		ldrsh	r3, [r3, #320]
 313 00da 9AB2     		uxth	r2, r3
 314 00dc 164B     		ldr	r3, .L13+12
 315 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 316 00e0 9BB2     		uxth	r3, r3
 317 00e2 D31A     		subs	r3, r2, r3
 318 00e4 7B82     		strh	r3, [r7, #18]	@ movhi
 319              	.L11:
  98:../source/FSK_Demodulator.c **** 		}
  99:../source/FSK_Demodulator.c **** 		aux *= (FSK_signal.buffer)[aux_index];
 320              		.loc 1 99 0 discriminator 2
 321 00e6 7B8A     		ldrh	r3, [r7, #18]
 322 00e8 104A     		ldr	r2, .L13
 323 00ea 9B00     		lsls	r3, r3, #2
 324 00ec 1344     		add	r3, r3, r2
 325 00ee D3ED007A 		vldr.32	s15, [r3]
 326 00f2 97ED037A 		vldr.32	s14, [r7, #12]
 327 00f6 67EE277A 		vmul.f32	s15, s14, s15
 328 00fa C7ED037A 		vstr.32	s15, [r7, #12]
 100:../source/FSK_Demodulator.c **** 		(PreFiltered_signal.buffer)[PreFiltered_signal.curr] = aux;
 329              		.loc 1 100 0 discriminator 2
 330 00fe 0D4B     		ldr	r3, .L13+8
 331 0100 B3F94031 		ldrsh	r3, [r3, #320]
 332 0104 0B4A     		ldr	r2, .L13+8
 333 0106 9B00     		lsls	r3, r3, #2
 334 0108 1344     		add	r3, r3, r2
 335 010a FA68     		ldr	r2, [r7, #12]	@ float
 336 010c 1A60     		str	r2, [r3]	@ float
  87:../source/FSK_Demodulator.c **** 	{
 337              		.loc 1 87 0 discriminator 2
 338 010e 7B69     		ldr	r3, [r7, #20]
 339 0110 0133     		adds	r3, r3, #1
 340 0112 7B61     		str	r3, [r7, #20]
 341              	.L9:
  87:../source/FSK_Demodulator.c **** 	{
 342              		.loc 1 87 0 is_stmt 0 discriminator 1
 343 0114 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 344 0116 7A69     		ldr	r2, [r7, #20]
 345 0118 9A42     		cmp	r2, r3
 346 011a ABDB     		blt	.L12
 101:../source/FSK_Demodulator.c **** 	}
 102:../source/FSK_Demodulator.c **** 	//Update result
 103:../source/FSK_Demodulator.c **** 	ApplyFIR(buffer_size);
 347              		.loc 1 103 0 is_stmt 1
 348 011c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 349 011e 1846     		mov	r0, r3
 350 0120 FFF7FEFF 		bl	ApplyFIR
 104:../source/FSK_Demodulator.c **** 
 105:../source/FSK_Demodulator.c **** 
 106:../source/FSK_Demodulator.c **** }
 351              		.loc 1 106 0
 352 0124 00BF     		nop
 353 0126 1837     		adds	r7, r7, #24
 354              		.cfi_def_cfa_offset 8
 355 0128 BD46     		mov	sp, r7
 356              		.cfi_def_cfa_register 13
 357              		@ sp needed
 358 012a 80BD     		pop	{r7, pc}
 359              	.L14:
 360              		.align	2
 361              	.L13:
 362 012c 00000000 		.word	FSK_signal
 363 0130 67666666 		.word	1717986919
 364 0134 00000000 		.word	PreFiltered_signal
 365 0138 00000000 		.word	prev_samples
 366              		.cfi_endproc
 367              	.LFE1:
 369              		.section	.text.ApplyFIR,"ax",%progbits
 370              		.align	1
 371              		.global	ApplyFIR
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv4-sp-d16
 377              	ApplyFIR:
 378              	.LFB2:
 107:../source/FSK_Demodulator.c **** 
 108:../source/FSK_Demodulator.c **** /***********************************************************
 109:../source/FSK_Demodulator.c ****  * 				FUNCTIONS WITH LOCAL SCOPE
 110:../source/FSK_Demodulator.c ****  ***********************************************************/
 111:../source/FSK_Demodulator.c **** void ApplyFIR(uint8_t cant)
 112:../source/FSK_Demodulator.c **** {
 379              		.loc 1 112 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 24
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 384 0000 80B4     		push	{r7}
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 7, -4
 387 0002 87B0     		sub	sp, sp, #28
 388              		.cfi_def_cfa_offset 32
 389 0004 00AF     		add	r7, sp, #0
 390              		.cfi_def_cfa_register 7
 391 0006 0346     		mov	r3, r0
 392 0008 FB71     		strb	r3, [r7, #7]
 113:../source/FSK_Demodulator.c **** 	int i=0;
 393              		.loc 1 113 0
 394 000a 0023     		movs	r3, #0
 395 000c 7B61     		str	r3, [r7, #20]
 114:../source/FSK_Demodulator.c **** 	int j=0;
 396              		.loc 1 114 0
 397 000e 0023     		movs	r3, #0
 398 0010 3B61     		str	r3, [r7, #16]
 115:../source/FSK_Demodulator.c **** 	uint16_t aux_index = 0;
 399              		.loc 1 115 0
 400 0012 0023     		movs	r3, #0
 401 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 116:../source/FSK_Demodulator.c **** 	float aux = 0;
 402              		.loc 1 116 0
 403 0016 4FF00003 		mov	r3, #0
 404 001a BB60     		str	r3, [r7, #8]	@ float
 117:../source/FSK_Demodulator.c **** 	for(i=0; i< cant; i++)
 405              		.loc 1 117 0
 406 001c 0023     		movs	r3, #0
 407 001e 7B61     		str	r3, [r7, #20]
 408 0020 97E0     		b	.L16
 409              	.L28:
 118:../source/FSK_Demodulator.c **** 	{
 119:../source/FSK_Demodulator.c **** 		aux = 0;
 410              		.loc 1 119 0
 411 0022 4FF00003 		mov	r3, #0
 412 0026 BB60     		str	r3, [r7, #8]	@ float
 120:../source/FSK_Demodulator.c **** 		result_signal.curr = (result_signal.curr+1) % CIRCULAR_BUFFER_SIZE;
 413              		.loc 1 120 0
 414 0028 4F4B     		ldr	r3, .L34
 415 002a B3F94031 		ldrsh	r3, [r3, #320]
 416 002e 5A1C     		adds	r2, r3, #1
 417 0030 4E4B     		ldr	r3, .L34+4
 418 0032 83FB0213 		smull	r1, r3, r3, r2
 419 0036 5911     		asrs	r1, r3, #5
 420 0038 D317     		asrs	r3, r2, #31
 421 003a C91A     		subs	r1, r1, r3
 422 003c 0B46     		mov	r3, r1
 423 003e 9B00     		lsls	r3, r3, #2
 424 0040 0B44     		add	r3, r3, r1
 425 0042 1B01     		lsls	r3, r3, #4
 426 0044 D11A     		subs	r1, r2, r3
 427 0046 0AB2     		sxth	r2, r1
 428 0048 474B     		ldr	r3, .L34
 429 004a A3F84021 		strh	r2, [r3, #320]	@ movhi
 121:../source/FSK_Demodulator.c **** 
 122:../source/FSK_Demodulator.c **** 		for(j=0; j< FIR_ORDER+1; j++)
 430              		.loc 1 122 0
 431 004e 0023     		movs	r3, #0
 432 0050 3B61     		str	r3, [r7, #16]
 433 0052 31E0     		b	.L17
 434              	.L20:
 123:../source/FSK_Demodulator.c **** 		{
 124:../source/FSK_Demodulator.c **** 			if( (result_signal.curr-j)<0 )
 435              		.loc 1 124 0
 436 0054 444B     		ldr	r3, .L34
 437 0056 B3F94031 		ldrsh	r3, [r3, #320]
 438 005a 1A46     		mov	r2, r3
 439 005c 3B69     		ldr	r3, [r7, #16]
 440 005e D31A     		subs	r3, r2, r3
 441 0060 002B     		cmp	r3, #0
 442 0062 0ADA     		bge	.L18
 125:../source/FSK_Demodulator.c **** 			{
 126:../source/FSK_Demodulator.c **** 				aux_index = CIRCULAR_BUFFER_SIZE + (result_signal.curr-j);
 443              		.loc 1 126 0
 444 0064 404B     		ldr	r3, .L34
 445 0066 B3F94031 		ldrsh	r3, [r3, #320]
 446 006a 9AB2     		uxth	r2, r3
 447 006c 3B69     		ldr	r3, [r7, #16]
 448 006e 9BB2     		uxth	r3, r3
 449 0070 D31A     		subs	r3, r2, r3
 450 0072 9BB2     		uxth	r3, r3
 451 0074 5033     		adds	r3, r3, #80
 452 0076 FB81     		strh	r3, [r7, #14]	@ movhi
 453 0078 07E0     		b	.L19
 454              	.L18:
 127:../source/FSK_Demodulator.c **** 			}
 128:../source/FSK_Demodulator.c **** 			else
 129:../source/FSK_Demodulator.c **** 			{
 130:../source/FSK_Demodulator.c **** 				aux_index = result_signal.curr-j;
 455              		.loc 1 130 0
 456 007a 3B4B     		ldr	r3, .L34
 457 007c B3F94031 		ldrsh	r3, [r3, #320]
 458 0080 9AB2     		uxth	r2, r3
 459 0082 3B69     		ldr	r3, [r7, #16]
 460 0084 9BB2     		uxth	r3, r3
 461 0086 D31A     		subs	r3, r2, r3
 462 0088 FB81     		strh	r3, [r7, #14]	@ movhi
 463              	.L19:
 131:../source/FSK_Demodulator.c **** 			}
 132:../source/FSK_Demodulator.c **** 			aux += ( fir_coeffs[j] ) * ( (PreFiltered_signal.buffer)[aux_index] );
 464              		.loc 1 132 0 discriminator 2
 465 008a 394A     		ldr	r2, .L34+8
 466 008c 3B69     		ldr	r3, [r7, #16]
 467 008e 9B00     		lsls	r3, r3, #2
 468 0090 1344     		add	r3, r3, r2
 469 0092 93ED007A 		vldr.32	s14, [r3]
 470 0096 FB89     		ldrh	r3, [r7, #14]
 471 0098 364A     		ldr	r2, .L34+12
 472 009a 9B00     		lsls	r3, r3, #2
 473 009c 1344     		add	r3, r3, r2
 474 009e D3ED007A 		vldr.32	s15, [r3]
 475 00a2 67EE277A 		vmul.f32	s15, s14, s15
 476 00a6 97ED027A 		vldr.32	s14, [r7, #8]
 477 00aa 77EE277A 		vadd.f32	s15, s14, s15
 478 00ae C7ED027A 		vstr.32	s15, [r7, #8]
 122:../source/FSK_Demodulator.c **** 		{
 479              		.loc 1 122 0 discriminator 2
 480 00b2 3B69     		ldr	r3, [r7, #16]
 481 00b4 0133     		adds	r3, r3, #1
 482 00b6 3B61     		str	r3, [r7, #16]
 483              	.L17:
 122:../source/FSK_Demodulator.c **** 		{
 484              		.loc 1 122 0 is_stmt 0 discriminator 1
 485 00b8 3B69     		ldr	r3, [r7, #16]
 486 00ba 122B     		cmp	r3, #18
 487 00bc CADD     		ble	.L20
 133:../source/FSK_Demodulator.c **** 		}
 134:../source/FSK_Demodulator.c **** 		//ApplyComparator
 135:../source/FSK_Demodulator.c **** 		if( (result_signal.buffer)[(result_signal.curr)-1] == 0)
 488              		.loc 1 135 0 is_stmt 1
 489 00be 2A4B     		ldr	r3, .L34
 490 00c0 B3F94031 		ldrsh	r3, [r3, #320]
 491 00c4 013B     		subs	r3, r3, #1
 492 00c6 284A     		ldr	r2, .L34
 493 00c8 9B00     		lsls	r3, r3, #2
 494 00ca 1344     		add	r3, r3, r2
 495 00cc D3ED007A 		vldr.32	s15, [r3]
 496 00d0 F5EE407A 		vcmp.f32	s15, #0
 497 00d4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 498 00d8 1CD1     		bne	.L21
 136:../source/FSK_Demodulator.c **** 		{
 137:../source/FSK_Demodulator.c **** 			if( aux < VLOW )
 499              		.loc 1 137 0
 500 00da D7ED027A 		vldr.32	s15, [r7, #8]
 501 00de BDEE007A 		vmov.f32	s14, #-2.5e-1
 502 00e2 F4EEC77A 		vcmpe.f32	s15, s14
 503 00e6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 504 00ea 09D5     		bpl	.L32
 138:../source/FSK_Demodulator.c **** 			{
 139:../source/FSK_Demodulator.c **** 				(result_signal.buffer)[result_signal.curr] = 1;
 505              		.loc 1 139 0
 506 00ec 1E4B     		ldr	r3, .L34
 507 00ee B3F94031 		ldrsh	r3, [r3, #320]
 508 00f2 1D4A     		ldr	r2, .L34
 509 00f4 9B00     		lsls	r3, r3, #2
 510 00f6 1344     		add	r3, r3, r2
 511 00f8 4FF07E52 		mov	r2, #1065353216
 512 00fc 1A60     		str	r2, [r3]	@ float
 513 00fe 25E0     		b	.L25
 514              	.L32:
 140:../source/FSK_Demodulator.c **** 			}
 141:../source/FSK_Demodulator.c **** 			else
 142:../source/FSK_Demodulator.c **** 			{
 143:../source/FSK_Demodulator.c **** 				(result_signal.buffer)[result_signal.curr] = 0;
 515              		.loc 1 143 0
 516 0100 194B     		ldr	r3, .L34
 517 0102 B3F94031 		ldrsh	r3, [r3, #320]
 518 0106 184A     		ldr	r2, .L34
 519 0108 9B00     		lsls	r3, r3, #2
 520 010a 1344     		add	r3, r3, r2
 521 010c 4FF00002 		mov	r2, #0
 522 0110 1A60     		str	r2, [r3]	@ float
 523 0112 1BE0     		b	.L25
 524              	.L21:
 144:../source/FSK_Demodulator.c **** 			}
 145:../source/FSK_Demodulator.c **** 		}
 146:../source/FSK_Demodulator.c **** 		else
 147:../source/FSK_Demodulator.c **** 		{
 148:../source/FSK_Demodulator.c **** 			if( aux > VHIGH )
 525              		.loc 1 148 0
 526 0114 D7ED027A 		vldr.32	s15, [r7, #8]
 527 0118 B5EE007A 		vmov.f32	s14, #2.5e-1
 528 011c F4EEC77A 		vcmpe.f32	s15, s14
 529 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 530 0124 09DD     		ble	.L33
 149:../source/FSK_Demodulator.c **** 			{
 150:../source/FSK_Demodulator.c **** 				(result_signal.buffer)[result_signal.curr] = 0;
 531              		.loc 1 150 0
 532 0126 104B     		ldr	r3, .L34
 533 0128 B3F94031 		ldrsh	r3, [r3, #320]
 534 012c 0E4A     		ldr	r2, .L34
 535 012e 9B00     		lsls	r3, r3, #2
 536 0130 1344     		add	r3, r3, r2
 537 0132 4FF00002 		mov	r2, #0
 538 0136 1A60     		str	r2, [r3]	@ float
 539 0138 08E0     		b	.L25
 540              	.L33:
 151:../source/FSK_Demodulator.c **** 			}
 152:../source/FSK_Demodulator.c **** 			else
 153:../source/FSK_Demodulator.c **** 			{
 154:../source/FSK_Demodulator.c **** 				(result_signal.buffer)[result_signal.curr] = 1;
 541              		.loc 1 154 0
 542 013a 0B4B     		ldr	r3, .L34
 543 013c B3F94031 		ldrsh	r3, [r3, #320]
 544 0140 094A     		ldr	r2, .L34
 545 0142 9B00     		lsls	r3, r3, #2
 546 0144 1344     		add	r3, r3, r2
 547 0146 4FF07E52 		mov	r2, #1065353216
 548 014a 1A60     		str	r2, [r3]	@ float
 549              	.L25:
 117:../source/FSK_Demodulator.c **** 	{
 550              		.loc 1 117 0 discriminator 2
 551 014c 7B69     		ldr	r3, [r7, #20]
 552 014e 0133     		adds	r3, r3, #1
 553 0150 7B61     		str	r3, [r7, #20]
 554              	.L16:
 117:../source/FSK_Demodulator.c **** 	{
 555              		.loc 1 117 0 is_stmt 0 discriminator 1
 556 0152 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 557 0154 7A69     		ldr	r2, [r7, #20]
 558 0156 9A42     		cmp	r2, r3
 559 0158 FFF663AF 		blt	.L28
 155:../source/FSK_Demodulator.c **** 			}
 156:../source/FSK_Demodulator.c **** 		}
 157:../source/FSK_Demodulator.c **** 	}
 158:../source/FSK_Demodulator.c **** 	return;
 560              		.loc 1 158 0 is_stmt 1
 561 015c 00BF     		nop
 159:../source/FSK_Demodulator.c **** }
 562              		.loc 1 159 0
 563 015e 1C37     		adds	r7, r7, #28
 564              		.cfi_def_cfa_offset 4
 565 0160 BD46     		mov	sp, r7
 566              		.cfi_def_cfa_register 13
 567              		@ sp needed
 568 0162 5DF8047B 		ldr	r7, [sp], #4
 569              		.cfi_restore 7
 570              		.cfi_def_cfa_offset 0
 571 0166 7047     		bx	lr
 572              	.L35:
 573              		.align	2
 574              	.L34:
 575 0168 00000000 		.word	result_signal
 576 016c 67666666 		.word	1717986919
 577 0170 00000000 		.word	fir_coeffs
 578 0174 00000000 		.word	PreFiltered_signal
 579              		.cfi_endproc
 580              	.LFE2:
 582              		.text
 583              	.Letext0:
 584              		.file 2 "c:\\nxp\\mcuxpressoide_10.2.0_759\\ide\\tools\\redlib\\include\\sys\\libconfig-arm.h"
 585              		.file 3 "c:\\nxp\\mcuxpressoide_10.2.0_759\\ide\\tools\\redlib\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 FSK_Demodulator.c
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:18     .bss.FSK_signal:00000000 $d
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:21     .bss.FSK_signal:00000000 FSK_signal
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:24     .bss.PreFiltered_signal:00000000 $d
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:27     .bss.PreFiltered_signal:00000000 PreFiltered_signal
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:30     .bss.result_signal:00000000 $d
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:33     .bss.result_signal:00000000 result_signal
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:36     .bss.fs:00000000 $d
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:39     .bss.fs:00000000 fs
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:44     .bss.prev_samples:00000000 prev_samples
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:45     .bss.prev_samples:00000000 $d
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:47     .data.fir_coeffs:00000000 $d
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:50     .data.fir_coeffs:00000000 fir_coeffs
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:74     .text.DemodulatorInit:00000000 $t
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:81     .text.DemodulatorInit:00000000 DemodulatorInit
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:169    .text.DemodulatorInit:00000080 $d
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:180    .text.DemodulateSignal:00000000 $t
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:187    .text.DemodulateSignal:00000000 DemodulateSignal
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:377    .text.ApplyFIR:00000000 ApplyFIR
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:362    .text.DemodulateSignal:0000012c $d
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:370    .text.ApplyFIR:00000000 $t
C:\Users\HP\AppData\Local\Temp\ccbOARwA.s:575    .text.ApplyFIR:00000168 $d
                           .group:00000000 wm4.0.33db8b643112917ec54934b4f2c2f387
                           .group:00000000 wm4.redlib_version.h.16.f905717e4b3a91dcbdbb631865150df4
                           .group:00000000 wm4.libconfigarm.h.18.1ad1d24f96d0dc8c4cf52dc19b0aa2c7
                           .group:00000000 wm4.stdint.h.30.079ac5d9930c76ab215c1ab68adcbe08

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_dmul
__aeabi_d2uiz
