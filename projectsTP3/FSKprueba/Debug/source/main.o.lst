   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.main,"ax",%progbits
  18              		.align	1
  19              		.global	main
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	main:
  26              	.LFB123:
  27              		.file 1 "../source/main.c"
   1:../source/main.c **** /*
   2:../source/main.c ****  * main.c
   3:../source/main.c ****  *
   4:../source/main.c ****  *  Created on: May 1, 2015
   5:../source/main.c ****  *      Author: Juan Pablo VEGA - Laboratorio de Microprocesadores
   6:../source/main.c ****  */
   7:../source/main.c **** 
   8:../source/main.c **** #include "hardware.h"
   9:../source/main.c **** #include <math.h>
  10:../source/main.c **** #include <stdint.h>
  11:../source/main.c **** #include "FSK_Demodulator.h"
  12:../source/main.c **** #include "DAC.h"
  13:../source/main.c **** #include "ADC.h"
  14:../source/main.c **** 
  15:../source/main.c **** #define PI 3.14159
  16:../source/main.c **** #define SIZE 20
  17:../source/main.c **** 
  18:../source/main.c **** #define __FOREVER__ 	for(;;)
  19:../source/main.c **** 
  20:../source/main.c **** 
  21:../source/main.c **** 
  22:../source/main.c **** int main (void)
  23:../source/main.c **** {
  28              		.loc 1 23 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  24:../source/main.c **** 	/*
  25:../source/main.c **** 	int16_t vector[SIZE];
  26:../source/main.c **** 	int i =0;
  27:../source/main.c **** 	uint32_t sample_freq = 12000;
  28:../source/main.c **** 	int f = 1200;
  29:../source/main.c **** 	DemodulatorInit(sample_freq);
  30:../source/main.c **** 	float amplitude = 100;
  31:../source/main.c **** 	for(i=0; i<SIZE; i++)
  32:../source/main.c **** 	{
  33:../source/main.c **** 		vector[i] = (int16_t) ( amplitude*sin( (2*PI*i*f)/sample_freq ) );
  34:../source/main.c **** 	}
  35:../source/main.c **** 
  36:../source/main.c **** 	DemodulateSignal(vector, SIZE);
  37:../source/main.c **** 	 */
  38:../source/main.c **** 
  39:../source/main.c **** 
  40:../source/main.c **** 
  41:../source/main.c **** 
  42:../source/main.c **** 	hw_DisableInterrupts();
  40              		.loc 1 42 0
  41 0006 FFF7FEFF 		bl	hw_DisableInterrupts
  43:../source/main.c **** 	DACconfig_t config;
  44:../source/main.c **** 	config.mode = DAC_NORMAL_MODE;
  42              		.loc 1 44 0
  43 000a 0023     		movs	r3, #0
  44 000c 3B74     		strb	r3, [r7, #16]
  45:../source/main.c **** 	config.dmaMode = DAC_DMA_DISABLE;
  45              		.loc 1 45 0
  46 000e 0023     		movs	r3, #0
  47 0010 7B74     		strb	r3, [r7, #17]
  46:../source/main.c **** 	DACinit(DAC0_ID, &config);
  48              		.loc 1 46 0
  49 0012 07F11003 		add	r3, r7, #16
  50 0016 1946     		mov	r1, r3
  51 0018 0020     		movs	r0, #0
  52 001a FFF7FEFF 		bl	DACinit
  47:../source/main.c **** 	//ADC Init
  48:../source/main.c **** 	ADC_Config_t adc_config;
  49:../source/main.c **** 	adc_config.channel_sel = AD5;
  53              		.loc 1 49 0
  54 001e 0523     		movs	r3, #5
  55 0020 7B70     		strb	r3, [r7, #1]
  50:../source/main.c **** 	adc_config.clock_type = BUS_CLOCK;
  56              		.loc 1 50 0
  57 0022 0023     		movs	r3, #0
  58 0024 FB70     		strb	r3, [r7, #3]
  51:../source/main.c **** 	adc_config.clock_divide = DIVIDE_BY_2;
  59              		.loc 1 51 0
  60 0026 0123     		movs	r3, #1
  61 0028 3B71     		strb	r3, [r7, #4]
  52:../source/main.c **** 	adc_config.low_power = true;
  62              		.loc 1 52 0
  63 002a 0123     		movs	r3, #1
  64 002c BB71     		strb	r3, [r7, #6]
  53:../source/main.c **** 	adc_config.diffential_mode = false;
  65              		.loc 1 53 0
  66 002e 0023     		movs	r3, #0
  67 0030 FB71     		strb	r3, [r7, #7]
  54:../source/main.c **** 	adc_config.enable_interrupts = false;
  68              		.loc 1 54 0
  69 0032 0023     		movs	r3, #0
  70 0034 3B72     		strb	r3, [r7, #8]
  55:../source/main.c **** 	adc_config.voltage_reference = DEFAULT;
  71              		.loc 1 55 0
  72 0036 0023     		movs	r3, #0
  73 0038 7B73     		strb	r3, [r7, #13]
  56:../source/main.c **** 	adc_config.trigger = SOFTWARE_TRIGGER;
  74              		.loc 1 56 0
  75 003a 0023     		movs	r3, #0
  76 003c 3B73     		strb	r3, [r7, #12]
  57:../source/main.c **** 	adc_config.resolution = SIXTEEN_BITS;
  77              		.loc 1 57 0
  78 003e 0323     		movs	r3, #3
  79 0040 BB70     		strb	r3, [r7, #2]
  58:../source/main.c **** 	adc_config.id = FIRST_ADC;
  80              		.loc 1 58 0
  81 0042 0023     		movs	r3, #0
  82 0044 3B70     		strb	r3, [r7]
  59:../source/main.c **** 	adc_config.enable_hardware_avg = false;
  83              		.loc 1 59 0
  84 0046 0023     		movs	r3, #0
  85 0048 BB72     		strb	r3, [r7, #10]
  60:../source/main.c **** 	ADC_Init( &adc_config );
  86              		.loc 1 60 0
  87 004a 3B46     		mov	r3, r7
  88 004c 1846     		mov	r0, r3
  89 004e FFF7FEFF 		bl	ADC_Init
  61:../source/main.c **** 
  62:../source/main.c **** 	float value = VIN_SELECTED/2.0;
  90              		.loc 1 62 0
  91 0052 0B4B     		ldr	r3, .L4
  92 0054 FB61     		str	r3, [r7, #28]	@ float
  63:../source/main.c **** 	writeDACvalue(DAC0_ID, 0, value);
  93              		.loc 1 63 0
  94 0056 97ED070A 		vldr.32	s0, [r7, #28]
  95 005a 0021     		movs	r1, #0
  96 005c 0020     		movs	r0, #0
  97 005e FFF7FEFF 		bl	writeDACvalue
  64:../source/main.c **** 	// Enable interrupts
  65:../source/main.c **** 	hw_EnableInterrupts();
  98              		.loc 1 65 0
  99 0062 FFF7FEFF 		bl	hw_EnableInterrupts
  66:../source/main.c **** 
  67:../source/main.c **** 	int16_t adc_data = 0;
 100              		.loc 1 67 0
 101 0066 0023     		movs	r3, #0
 102 0068 7B83     		strh	r3, [r7, #26]	@ movhi
 103              	.L3:
  68:../source/main.c **** 
  69:../source/main.c **** 	while(1)
  70:../source/main.c **** 	{
  71:../source/main.c **** 		if( IsConversionFinished() )
 104              		.loc 1 71 0
 105 006a FFF7FEFF 		bl	IsConversionFinished
 106 006e 0346     		mov	r3, r0
 107 0070 002B     		cmp	r3, #0
 108 0072 FAD0     		beq	.L3
  72:../source/main.c **** 		{
  73:../source/main.c **** 			adc_data = GetConversionResult();
 109              		.loc 1 73 0
 110 0074 FFF7FEFF 		bl	GetConversionResult
 111 0078 0346     		mov	r3, r0
 112 007a 7B83     		strh	r3, [r7, #26]	@ movhi
  71:../source/main.c **** 		{
 113              		.loc 1 71 0
 114 007c F5E7     		b	.L3
 115              	.L5:
 116 007e 00BF     		.align	2
 117              	.L4:
 118 0080 3333D33F 		.word	1070805811
 119              		.cfi_endproc
 120              	.LFE123:
 122              		.text
 123              	.Letext0:
 124              		.file 2 "c:\\nxp\\mcuxpressoide_10.2.0_759\\ide\\tools\\redlib\\include\\sys\\libconfig-arm.h"
 125              		.file 3 "c:\\nxp\\mcuxpressoide_10.2.0_759\\ide\\tools\\redlib\\include\\stdint.h"
 126              		.file 4 "C:\\Users\\HP\\source\\repos\\TP3-LABmicros\\projectsTP3\\FSKprueba\\CMSIS/core_cm4.h"
 127              		.file 5 "C:\\Users\\HP\\source\\repos\\TP3-LABmicros\\projectsTP3\\FSKprueba\\CMSIS/system_MK64F12
 128              		.file 6 "c:\\nxp\\mcuxpressoide_10.2.0_759\\ide\\tools\\redlib\\include\\math.h"
 129              		.file 7 "../source/DAC.h"
 130              		.file 8 "../source/ADC.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\HP\AppData\Local\Temp\ccBc1ONg.s:18     .text.main:00000000 $t
C:\Users\HP\AppData\Local\Temp\ccBc1ONg.s:25     .text.main:00000000 main
C:\Users\HP\AppData\Local\Temp\ccBc1ONg.s:118    .text.main:00000080 $d
                           .group:00000000 wm4.0.33db8b643112917ec54934b4f2c2f387
                           .group:00000000 wm4.redlib_version.h.16.f905717e4b3a91dcbdbb631865150df4
                           .group:00000000 wm4.libconfigarm.h.18.1ad1d24f96d0dc8c4cf52dc19b0aa2c7
                           .group:00000000 wm4.stdint.h.30.079ac5d9930c76ab215c1ab68adcbe08
                           .group:00000000 wm4.stdbool.h.15.fddf1cb2402fd739d8e2516677869231
                           .group:00000000 wm4.fsl_device_registers.h.32.f10b25a7fd7ad45b9a40904c33f28816
                           .group:00000000 wm4.MK64F12.h.105.e884e5c80776532d2ec0f5c21e2ea7cb
                           .group:00000000 wm4.core_cm4.h.42.42f38327ee0970d80f60117e6a3ba2b0
                           .group:00000000 wm4.cmsis_gcc.h.36.39970cb43ce4b53c82644a1f9bc2eab9
                           .group:00000000 wm4.core_cm4.h.223.7b48c9958ef5573320c4765074c8b0ce
                           .group:00000000 wm4.system_MK64F12.h.109.c6d21568e03be21b21c922eb7345d6e3
                           .group:00000000 wm4.MK64F12.h.475.cafa8e1e521f96f0b72de286863a6df7
                           .group:00000000 wm4.MK64F12_features.h.92.512cea46d882153168efeec0bc3a9da7
                           .group:00000000 wm4.hardware.h.27.0531344360c1b4ef1fba1263e2a4c488
                           .group:00000000 wm4.math.h.9.e0fac7c18ffc4430a3b17b4c6aa65d4f
                           .group:00000000 wm4.DAC.h.9.a0a8b96f131343e08c8609ae233571d2

UNDEFINED SYMBOLS
hw_DisableInterrupts
DACinit
ADC_Init
writeDACvalue
hw_EnableInterrupts
IsConversionFinished
GetConversionResult
