   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.adc_data,"aw",%nobits
  18              		.align	1
  21              	adc_data:
  22 0000 0000     		.space	2
  23              		.global	__aeabi_i2d
  24              		.global	__aeabi_dmul
  25              		.global	__aeabi_f2d
  26              		.global	__aeabi_ddiv
  27              		.global	__aeabi_d2f
  28              		.section	.text.main,"ax",%progbits
  29              		.align	1
  30              		.global	main
  31              		.syntax unified
  32              		.thumb
  33              		.thumb_func
  34              		.fpu fpv4-sp-d16
  36              	main:
  37              	.LFB123:
  38              		.file 1 "../source/main.c"
   1:../source/main.c **** /*
   2:../source/main.c ****  * main.c
   3:../source/main.c ****  *
   4:../source/main.c ****  *  Created on: May 1, 2015
   5:../source/main.c ****  *      Author: Juan Pablo VEGA - Laboratorio de Microprocesadores
   6:../source/main.c ****  */
   7:../source/main.c **** 
   8:../source/main.c **** #include "hardware.h"
   9:../source/main.c **** #include <math.h>
  10:../source/main.c **** #include <stdint.h>
  11:../source/main.c **** #include "FSK_Demodulator.h"
  12:../source/main.c **** #include "DAC.h"
  13:../source/main.c **** #include "ADC.h"
  14:../source/main.c **** 
  15:../source/main.c **** #define PI 3.14159
  16:../source/main.c **** #define SIZE 80
  17:../source/main.c **** 
  18:../source/main.c **** #define __FOREVER__ 	for(;;)
  19:../source/main.c **** 
  20:../source/main.c **** void adc_func(void);
  21:../source/main.c **** 
  22:../source/main.c **** 
  23:../source/main.c **** static ADC_Data_t adc_data;
  24:../source/main.c **** 
  25:../source/main.c **** int main (void)
  26:../source/main.c **** {
  39              		.loc 1 26 0
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 376
  42              		@ frame_needed = 1, uses_anonymous_args = 0
  43 0000 B0B5     		push	{r4, r5, r7, lr}
  44              		.cfi_def_cfa_offset 16
  45              		.cfi_offset 4, -16
  46              		.cfi_offset 5, -12
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 DEB0     		sub	sp, sp, #376
  50              		.cfi_def_cfa_offset 392
  51 0004 00AF     		add	r7, sp, #0
  52              		.cfi_def_cfa_register 7
  27:../source/main.c **** 	bool signal[30];
  28:../source/main.c **** 	int aux;
  29:../source/main.c **** 	float vector[SIZE];
  30:../source/main.c **** 	int i =0;
  53              		.loc 1 30 0
  54 0006 0023     		movs	r3, #0
  55 0008 C7F87431 		str	r3, [r7, #372]
  31:../source/main.c **** 	int j = 0;
  56              		.loc 1 31 0
  57 000c 0023     		movs	r3, #0
  58 000e C7F87031 		str	r3, [r7, #368]
  32:../source/main.c **** 	float sample_freq = 12000;
  59              		.loc 1 32 0
  60 0012 E14B     		ldr	r3, .L16+8
  61 0014 C7F86C31 		str	r3, [r7, #364]	@ float
  33:../source/main.c **** 	int f = 2200;
  62              		.loc 1 33 0
  63 0018 40F69803 		movw	r3, #2200
  64 001c C7F86831 		str	r3, [r7, #360]
  34:../source/main.c **** 	DemodulatorInit();
  65              		.loc 1 34 0
  66 0020 FFF7FEFF 		bl	DemodulatorInit
  35:../source/main.c **** 	float amplitude = 100;
  67              		.loc 1 35 0
  68 0024 DD4B     		ldr	r3, .L16+12
  69 0026 C7F86431 		str	r3, [r7, #356]	@ float
  36:../source/main.c **** 	for(i=0; i<20; i++)
  70              		.loc 1 36 0
  71 002a 0023     		movs	r3, #0
  72 002c C7F87431 		str	r3, [r7, #372]
  73 0030 40E0     		b	.L2
  74              	.L3:
  37:../source/main.c **** 	{
  38:../source/main.c **** 		vector[i] = sin( (2*PI*f*i)/sample_freq );
  75              		.loc 1 38 0 discriminator 3
  76 0032 D7F86801 		ldr	r0, [r7, #360]
  77 0036 FFF7FEFF 		bl	__aeabi_i2d
  78              	.LVL0:
  79 003a D5A3     		adr	r3, .L16
  80 003c D3E90023 		ldrd	r2, [r3]
  81 0040 FFF7FEFF 		bl	__aeabi_dmul
  82              	.LVL1:
  83 0044 0346     		mov	r3, r0
  84 0046 0C46     		mov	r4, r1
  85 0048 2546     		mov	r5, r4
  86 004a 1C46     		mov	r4, r3
  87 004c D7F87401 		ldr	r0, [r7, #372]
  88 0050 FFF7FEFF 		bl	__aeabi_i2d
  89              	.LVL2:
  90 0054 0246     		mov	r2, r0
  91 0056 0B46     		mov	r3, r1
  92 0058 2046     		mov	r0, r4
  93 005a 2946     		mov	r1, r5
  94 005c FFF7FEFF 		bl	__aeabi_dmul
  95              	.LVL3:
  96 0060 0346     		mov	r3, r0
  97 0062 0C46     		mov	r4, r1
  98 0064 2546     		mov	r5, r4
  99 0066 1C46     		mov	r4, r3
 100 0068 D7F86C01 		ldr	r0, [r7, #364]	@ float
 101 006c FFF7FEFF 		bl	__aeabi_f2d
 102              	.LVL4:
 103 0070 0246     		mov	r2, r0
 104 0072 0B46     		mov	r3, r1
 105 0074 2046     		mov	r0, r4
 106 0076 2946     		mov	r1, r5
 107 0078 FFF7FEFF 		bl	__aeabi_ddiv
 108              	.LVL5:
 109 007c 0346     		mov	r3, r0
 110 007e 0C46     		mov	r4, r1
 111 0080 44EC173B 		vmov	d7, r3, r4
 112 0084 B0EE470A 		vmov.f32	s0, s14
 113 0088 F0EE670A 		vmov.f32	s1, s15
 114 008c FFF7FEFF 		bl	sin
 115 0090 54EC103B 		vmov	r3, r4, d0
 116 0094 1846     		mov	r0, r3
 117 0096 2146     		mov	r1, r4
 118 0098 FFF7FEFF 		bl	__aeabi_d2f
 119              	.LVL6:
 120 009c 0146     		mov	r1, r0	@ float
 121 009e 3A46     		mov	r2, r7
 122 00a0 D7F87431 		ldr	r3, [r7, #372]
 123 00a4 9B00     		lsls	r3, r3, #2
 124 00a6 1344     		add	r3, r3, r2
 125 00a8 1960     		str	r1, [r3]	@ float
  36:../source/main.c **** 	for(i=0; i<20; i++)
 126              		.loc 1 36 0 discriminator 3
 127 00aa D7F87431 		ldr	r3, [r7, #372]
 128 00ae 0133     		adds	r3, r3, #1
 129 00b0 C7F87431 		str	r3, [r7, #372]
 130              	.L2:
  36:../source/main.c **** 	for(i=0; i<20; i++)
 131              		.loc 1 36 0 is_stmt 0 discriminator 1
 132 00b4 D7F87431 		ldr	r3, [r7, #372]
 133 00b8 132B     		cmp	r3, #19
 134 00ba BADD     		ble	.L3
  39:../source/main.c **** 	}
  40:../source/main.c **** 	f=1200;
 135              		.loc 1 40 0 is_stmt 1
 136 00bc 4FF49663 		mov	r3, #1200
 137 00c0 C7F86831 		str	r3, [r7, #360]
  41:../source/main.c **** 	for(i=20; i<40; i++)
 138              		.loc 1 41 0
 139 00c4 1423     		movs	r3, #20
 140 00c6 C7F87431 		str	r3, [r7, #372]
 141 00ca 40E0     		b	.L4
 142              	.L5:
  42:../source/main.c **** 	{
  43:../source/main.c **** 		vector[i] = sin( (2*PI*f*i)/sample_freq );
 143              		.loc 1 43 0 discriminator 3
 144 00cc D7F86801 		ldr	r0, [r7, #360]
 145 00d0 FFF7FEFF 		bl	__aeabi_i2d
 146              	.LVL7:
 147 00d4 AEA3     		adr	r3, .L16
 148 00d6 D3E90023 		ldrd	r2, [r3]
 149 00da FFF7FEFF 		bl	__aeabi_dmul
 150              	.LVL8:
 151 00de 0346     		mov	r3, r0
 152 00e0 0C46     		mov	r4, r1
 153 00e2 2546     		mov	r5, r4
 154 00e4 1C46     		mov	r4, r3
 155 00e6 D7F87401 		ldr	r0, [r7, #372]
 156 00ea FFF7FEFF 		bl	__aeabi_i2d
 157              	.LVL9:
 158 00ee 0246     		mov	r2, r0
 159 00f0 0B46     		mov	r3, r1
 160 00f2 2046     		mov	r0, r4
 161 00f4 2946     		mov	r1, r5
 162 00f6 FFF7FEFF 		bl	__aeabi_dmul
 163              	.LVL10:
 164 00fa 0346     		mov	r3, r0
 165 00fc 0C46     		mov	r4, r1
 166 00fe 2546     		mov	r5, r4
 167 0100 1C46     		mov	r4, r3
 168 0102 D7F86C01 		ldr	r0, [r7, #364]	@ float
 169 0106 FFF7FEFF 		bl	__aeabi_f2d
 170              	.LVL11:
 171 010a 0246     		mov	r2, r0
 172 010c 0B46     		mov	r3, r1
 173 010e 2046     		mov	r0, r4
 174 0110 2946     		mov	r1, r5
 175 0112 FFF7FEFF 		bl	__aeabi_ddiv
 176              	.LVL12:
 177 0116 0346     		mov	r3, r0
 178 0118 0C46     		mov	r4, r1
 179 011a 44EC173B 		vmov	d7, r3, r4
 180 011e B0EE470A 		vmov.f32	s0, s14
 181 0122 F0EE670A 		vmov.f32	s1, s15
 182 0126 FFF7FEFF 		bl	sin
 183 012a 54EC103B 		vmov	r3, r4, d0
 184 012e 1846     		mov	r0, r3
 185 0130 2146     		mov	r1, r4
 186 0132 FFF7FEFF 		bl	__aeabi_d2f
 187              	.LVL13:
 188 0136 0146     		mov	r1, r0	@ float
 189 0138 3A46     		mov	r2, r7
 190 013a D7F87431 		ldr	r3, [r7, #372]
 191 013e 9B00     		lsls	r3, r3, #2
 192 0140 1344     		add	r3, r3, r2
 193 0142 1960     		str	r1, [r3]	@ float
  41:../source/main.c **** 	for(i=20; i<40; i++)
 194              		.loc 1 41 0 discriminator 3
 195 0144 D7F87431 		ldr	r3, [r7, #372]
 196 0148 0133     		adds	r3, r3, #1
 197 014a C7F87431 		str	r3, [r7, #372]
 198              	.L4:
  41:../source/main.c **** 	for(i=20; i<40; i++)
 199              		.loc 1 41 0 is_stmt 0 discriminator 1
 200 014e D7F87431 		ldr	r3, [r7, #372]
 201 0152 272B     		cmp	r3, #39
 202 0154 BADD     		ble	.L5
  44:../source/main.c **** 	}
  45:../source/main.c **** 	f=2200;
 203              		.loc 1 45 0 is_stmt 1
 204 0156 40F69803 		movw	r3, #2200
 205 015a C7F86831 		str	r3, [r7, #360]
  46:../source/main.c **** 	for(i=40; i<50; i++)
 206              		.loc 1 46 0
 207 015e 2823     		movs	r3, #40
 208 0160 C7F87431 		str	r3, [r7, #372]
 209 0164 40E0     		b	.L6
 210              	.L7:
  47:../source/main.c **** 	{
  48:../source/main.c **** 		vector[i] = sin( (2*PI*f*i)/sample_freq );
 211              		.loc 1 48 0 discriminator 3
 212 0166 D7F86801 		ldr	r0, [r7, #360]
 213 016a FFF7FEFF 		bl	__aeabi_i2d
 214              	.LVL14:
 215 016e 88A3     		adr	r3, .L16
 216 0170 D3E90023 		ldrd	r2, [r3]
 217 0174 FFF7FEFF 		bl	__aeabi_dmul
 218              	.LVL15:
 219 0178 0346     		mov	r3, r0
 220 017a 0C46     		mov	r4, r1
 221 017c 2546     		mov	r5, r4
 222 017e 1C46     		mov	r4, r3
 223 0180 D7F87401 		ldr	r0, [r7, #372]
 224 0184 FFF7FEFF 		bl	__aeabi_i2d
 225              	.LVL16:
 226 0188 0246     		mov	r2, r0
 227 018a 0B46     		mov	r3, r1
 228 018c 2046     		mov	r0, r4
 229 018e 2946     		mov	r1, r5
 230 0190 FFF7FEFF 		bl	__aeabi_dmul
 231              	.LVL17:
 232 0194 0346     		mov	r3, r0
 233 0196 0C46     		mov	r4, r1
 234 0198 2546     		mov	r5, r4
 235 019a 1C46     		mov	r4, r3
 236 019c D7F86C01 		ldr	r0, [r7, #364]	@ float
 237 01a0 FFF7FEFF 		bl	__aeabi_f2d
 238              	.LVL18:
 239 01a4 0246     		mov	r2, r0
 240 01a6 0B46     		mov	r3, r1
 241 01a8 2046     		mov	r0, r4
 242 01aa 2946     		mov	r1, r5
 243 01ac FFF7FEFF 		bl	__aeabi_ddiv
 244              	.LVL19:
 245 01b0 0346     		mov	r3, r0
 246 01b2 0C46     		mov	r4, r1
 247 01b4 44EC173B 		vmov	d7, r3, r4
 248 01b8 B0EE470A 		vmov.f32	s0, s14
 249 01bc F0EE670A 		vmov.f32	s1, s15
 250 01c0 FFF7FEFF 		bl	sin
 251 01c4 54EC103B 		vmov	r3, r4, d0
 252 01c8 1846     		mov	r0, r3
 253 01ca 2146     		mov	r1, r4
 254 01cc FFF7FEFF 		bl	__aeabi_d2f
 255              	.LVL20:
 256 01d0 0146     		mov	r1, r0	@ float
 257 01d2 3A46     		mov	r2, r7
 258 01d4 D7F87431 		ldr	r3, [r7, #372]
 259 01d8 9B00     		lsls	r3, r3, #2
 260 01da 1344     		add	r3, r3, r2
 261 01dc 1960     		str	r1, [r3]	@ float
  46:../source/main.c **** 	for(i=40; i<50; i++)
 262              		.loc 1 46 0 discriminator 3
 263 01de D7F87431 		ldr	r3, [r7, #372]
 264 01e2 0133     		adds	r3, r3, #1
 265 01e4 C7F87431 		str	r3, [r7, #372]
 266              	.L6:
  46:../source/main.c **** 	for(i=40; i<50; i++)
 267              		.loc 1 46 0 is_stmt 0 discriminator 1
 268 01e8 D7F87431 		ldr	r3, [r7, #372]
 269 01ec 312B     		cmp	r3, #49
 270 01ee BADD     		ble	.L7
  49:../source/main.c **** 	}
  50:../source/main.c **** 	f=1200;
 271              		.loc 1 50 0 is_stmt 1
 272 01f0 4FF49663 		mov	r3, #1200
 273 01f4 C7F86831 		str	r3, [r7, #360]
  51:../source/main.c **** 	for(i=50; i<60; i++)
 274              		.loc 1 51 0
 275 01f8 3223     		movs	r3, #50
 276 01fa C7F87431 		str	r3, [r7, #372]
 277 01fe 40E0     		b	.L8
 278              	.L9:
  52:../source/main.c **** 	{
  53:../source/main.c **** 		vector[i] = sin( (2*PI*f*i)/sample_freq );
 279              		.loc 1 53 0 discriminator 3
 280 0200 D7F86801 		ldr	r0, [r7, #360]
 281 0204 FFF7FEFF 		bl	__aeabi_i2d
 282              	.LVL21:
 283 0208 61A3     		adr	r3, .L16
 284 020a D3E90023 		ldrd	r2, [r3]
 285 020e FFF7FEFF 		bl	__aeabi_dmul
 286              	.LVL22:
 287 0212 0346     		mov	r3, r0
 288 0214 0C46     		mov	r4, r1
 289 0216 2546     		mov	r5, r4
 290 0218 1C46     		mov	r4, r3
 291 021a D7F87401 		ldr	r0, [r7, #372]
 292 021e FFF7FEFF 		bl	__aeabi_i2d
 293              	.LVL23:
 294 0222 0246     		mov	r2, r0
 295 0224 0B46     		mov	r3, r1
 296 0226 2046     		mov	r0, r4
 297 0228 2946     		mov	r1, r5
 298 022a FFF7FEFF 		bl	__aeabi_dmul
 299              	.LVL24:
 300 022e 0346     		mov	r3, r0
 301 0230 0C46     		mov	r4, r1
 302 0232 2546     		mov	r5, r4
 303 0234 1C46     		mov	r4, r3
 304 0236 D7F86C01 		ldr	r0, [r7, #364]	@ float
 305 023a FFF7FEFF 		bl	__aeabi_f2d
 306              	.LVL25:
 307 023e 0246     		mov	r2, r0
 308 0240 0B46     		mov	r3, r1
 309 0242 2046     		mov	r0, r4
 310 0244 2946     		mov	r1, r5
 311 0246 FFF7FEFF 		bl	__aeabi_ddiv
 312              	.LVL26:
 313 024a 0346     		mov	r3, r0
 314 024c 0C46     		mov	r4, r1
 315 024e 44EC173B 		vmov	d7, r3, r4
 316 0252 B0EE470A 		vmov.f32	s0, s14
 317 0256 F0EE670A 		vmov.f32	s1, s15
 318 025a FFF7FEFF 		bl	sin
 319 025e 54EC103B 		vmov	r3, r4, d0
 320 0262 1846     		mov	r0, r3
 321 0264 2146     		mov	r1, r4
 322 0266 FFF7FEFF 		bl	__aeabi_d2f
 323              	.LVL27:
 324 026a 0146     		mov	r1, r0	@ float
 325 026c 3A46     		mov	r2, r7
 326 026e D7F87431 		ldr	r3, [r7, #372]
 327 0272 9B00     		lsls	r3, r3, #2
 328 0274 1344     		add	r3, r3, r2
 329 0276 1960     		str	r1, [r3]	@ float
  51:../source/main.c **** 	for(i=50; i<60; i++)
 330              		.loc 1 51 0 discriminator 3
 331 0278 D7F87431 		ldr	r3, [r7, #372]
 332 027c 0133     		adds	r3, r3, #1
 333 027e C7F87431 		str	r3, [r7, #372]
 334              	.L8:
  51:../source/main.c **** 	for(i=50; i<60; i++)
 335              		.loc 1 51 0 is_stmt 0 discriminator 1
 336 0282 D7F87431 		ldr	r3, [r7, #372]
 337 0286 3B2B     		cmp	r3, #59
 338 0288 BADD     		ble	.L9
  54:../source/main.c **** 	}
  55:../source/main.c **** 	f=2200;
 339              		.loc 1 55 0 is_stmt 1
 340 028a 40F69803 		movw	r3, #2200
 341 028e C7F86831 		str	r3, [r7, #360]
  56:../source/main.c **** 	for(i=60; i<SIZE; i++)
 342              		.loc 1 56 0
 343 0292 3C23     		movs	r3, #60
 344 0294 C7F87431 		str	r3, [r7, #372]
 345 0298 40E0     		b	.L10
 346              	.L11:
  57:../source/main.c **** 	{
  58:../source/main.c **** 		vector[i] = sin( (2*PI*f*i)/sample_freq );
 347              		.loc 1 58 0 discriminator 3
 348 029a D7F86801 		ldr	r0, [r7, #360]
 349 029e FFF7FEFF 		bl	__aeabi_i2d
 350              	.LVL28:
 351 02a2 3BA3     		adr	r3, .L16
 352 02a4 D3E90023 		ldrd	r2, [r3]
 353 02a8 FFF7FEFF 		bl	__aeabi_dmul
 354              	.LVL29:
 355 02ac 0346     		mov	r3, r0
 356 02ae 0C46     		mov	r4, r1
 357 02b0 2546     		mov	r5, r4
 358 02b2 1C46     		mov	r4, r3
 359 02b4 D7F87401 		ldr	r0, [r7, #372]
 360 02b8 FFF7FEFF 		bl	__aeabi_i2d
 361              	.LVL30:
 362 02bc 0246     		mov	r2, r0
 363 02be 0B46     		mov	r3, r1
 364 02c0 2046     		mov	r0, r4
 365 02c2 2946     		mov	r1, r5
 366 02c4 FFF7FEFF 		bl	__aeabi_dmul
 367              	.LVL31:
 368 02c8 0346     		mov	r3, r0
 369 02ca 0C46     		mov	r4, r1
 370 02cc 2546     		mov	r5, r4
 371 02ce 1C46     		mov	r4, r3
 372 02d0 D7F86C01 		ldr	r0, [r7, #364]	@ float
 373 02d4 FFF7FEFF 		bl	__aeabi_f2d
 374              	.LVL32:
 375 02d8 0246     		mov	r2, r0
 376 02da 0B46     		mov	r3, r1
 377 02dc 2046     		mov	r0, r4
 378 02de 2946     		mov	r1, r5
 379 02e0 FFF7FEFF 		bl	__aeabi_ddiv
 380              	.LVL33:
 381 02e4 0346     		mov	r3, r0
 382 02e6 0C46     		mov	r4, r1
 383 02e8 44EC173B 		vmov	d7, r3, r4
 384 02ec B0EE470A 		vmov.f32	s0, s14
 385 02f0 F0EE670A 		vmov.f32	s1, s15
 386 02f4 FFF7FEFF 		bl	sin
 387 02f8 54EC103B 		vmov	r3, r4, d0
 388 02fc 1846     		mov	r0, r3
 389 02fe 2146     		mov	r1, r4
 390 0300 FFF7FEFF 		bl	__aeabi_d2f
 391              	.LVL34:
 392 0304 0146     		mov	r1, r0	@ float
 393 0306 3A46     		mov	r2, r7
 394 0308 D7F87431 		ldr	r3, [r7, #372]
 395 030c 9B00     		lsls	r3, r3, #2
 396 030e 1344     		add	r3, r3, r2
 397 0310 1960     		str	r1, [r3]	@ float
  56:../source/main.c **** 	for(i=60; i<SIZE; i++)
 398              		.loc 1 56 0 discriminator 3
 399 0312 D7F87431 		ldr	r3, [r7, #372]
 400 0316 0133     		adds	r3, r3, #1
 401 0318 C7F87431 		str	r3, [r7, #372]
 402              	.L10:
  56:../source/main.c **** 	for(i=60; i<SIZE; i++)
 403              		.loc 1 56 0 is_stmt 0 discriminator 1
 404 031c D7F87431 		ldr	r3, [r7, #372]
 405 0320 4F2B     		cmp	r3, #79
 406 0322 BADD     		ble	.L11
  59:../source/main.c **** 	}
  60:../source/main.c **** 	for(i=0; i<SIZE;i++)
 407              		.loc 1 60 0 is_stmt 1
 408 0324 0023     		movs	r3, #0
 409 0326 C7F87431 		str	r3, [r7, #372]
 410 032a 2AE0     		b	.L12
 411              	.L14:
  61:../source/main.c **** 	{
  62:../source/main.c **** 		aux = DemodulateSignal(vector[i]);
 412              		.loc 1 62 0
 413 032c 3A46     		mov	r2, r7
 414 032e D7F87431 		ldr	r3, [r7, #372]
 415 0332 9B00     		lsls	r3, r3, #2
 416 0334 1344     		add	r3, r3, r2
 417 0336 D3ED007A 		vldr.32	s15, [r3]
 418 033a B0EE670A 		vmov.f32	s0, s15
 419 033e FFF7FEFF 		bl	DemodulateSignal
 420 0342 0346     		mov	r3, r0
 421 0344 C7F86031 		str	r3, [r7, #352]
  63:../source/main.c **** 		if( aux != -1)
 422              		.loc 1 63 0
 423 0348 D7F86031 		ldr	r3, [r7, #352]
 424 034c B3F1FF3F 		cmp	r3, #-1
 425 0350 12D0     		beq	.L13
  64:../source/main.c **** 		{
  65:../source/main.c **** 			signal[j] = aux;
 426              		.loc 1 65 0
 427 0352 D7F86031 		ldr	r3, [r7, #352]
 428 0356 002B     		cmp	r3, #0
 429 0358 14BF     		ite	ne
 430 035a 0123     		movne	r3, #1
 431 035c 0023     		moveq	r3, #0
 432 035e D9B2     		uxtb	r1, r3
 433 0360 07F5A072 		add	r2, r7, #320
 434 0364 D7F87031 		ldr	r3, [r7, #368]
 435 0368 1344     		add	r3, r3, r2
 436 036a 0A46     		mov	r2, r1
 437 036c 1A70     		strb	r2, [r3]
  66:../source/main.c **** 			j++;
 438              		.loc 1 66 0
 439 036e D7F87031 		ldr	r3, [r7, #368]
 440 0372 0133     		adds	r3, r3, #1
 441 0374 C7F87031 		str	r3, [r7, #368]
 442              	.L13:
  60:../source/main.c **** 	{
 443              		.loc 1 60 0 discriminator 2
 444 0378 D7F87431 		ldr	r3, [r7, #372]
 445 037c 0133     		adds	r3, r3, #1
 446 037e C7F87431 		str	r3, [r7, #372]
 447              	.L12:
  60:../source/main.c **** 	{
 448              		.loc 1 60 0 is_stmt 0 discriminator 1
 449 0382 D7F87431 		ldr	r3, [r7, #372]
 450 0386 4F2B     		cmp	r3, #79
 451 0388 D0DD     		ble	.L14
 452              	.L15:
  67:../source/main.c **** 		}
  68:../source/main.c **** 	}
  69:../source/main.c **** 
  70:../source/main.c **** 	while(1);
 453              		.loc 1 70 0 is_stmt 1 discriminator 1
 454 038a FEE7     		b	.L15
 455              	.L17:
 456 038c AFF30080 		.align	3
 457              	.L16:
 458 0390 6E861BF0 		.word	-266631570
 459 0394 F9211940 		.word	1075388921
 460 0398 00803B46 		.word	1178304512
 461 039c 0000C842 		.word	1120403456
 462              		.cfi_endproc
 463              	.LFE123:
 465              		.text
 466              	.Letext0:
 467              		.file 2 "c:\\nxp\\mcuxpressoide_10.2.0_759\\ide\\tools\\redlib\\include\\sys\\libconfig-arm.h"
 468              		.file 3 "c:\\nxp\\mcuxpressoide_10.2.0_759\\ide\\tools\\redlib\\include\\stdint.h"
 469              		.file 4 "C:\\Users\\HP\\source\\repos\\TP3-LABmicros\\projectsTP3\\FSKprueba\\CMSIS/core_cm4.h"
 470              		.file 5 "C:\\Users\\HP\\source\\repos\\TP3-LABmicros\\projectsTP3\\FSKprueba\\CMSIS/system_MK64F12
 471              		.file 6 "c:\\nxp\\mcuxpressoide_10.2.0_759\\ide\\tools\\redlib\\include\\math.h"
 472              		.file 7 "../source/ADC.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\HP\AppData\Local\Temp\ccf3v29r.s:18     .bss.adc_data:00000000 $d
C:\Users\HP\AppData\Local\Temp\ccf3v29r.s:21     .bss.adc_data:00000000 adc_data
C:\Users\HP\AppData\Local\Temp\ccf3v29r.s:29     .text.main:00000000 $t
C:\Users\HP\AppData\Local\Temp\ccf3v29r.s:36     .text.main:00000000 main
C:\Users\HP\AppData\Local\Temp\ccf3v29r.s:458    .text.main:00000390 $d
                           .group:00000000 wm4.0.33db8b643112917ec54934b4f2c2f387
                           .group:00000000 wm4.redlib_version.h.16.f905717e4b3a91dcbdbb631865150df4
                           .group:00000000 wm4.libconfigarm.h.18.1ad1d24f96d0dc8c4cf52dc19b0aa2c7
                           .group:00000000 wm4.stdint.h.30.079ac5d9930c76ab215c1ab68adcbe08
                           .group:00000000 wm4.stdbool.h.15.fddf1cb2402fd739d8e2516677869231
                           .group:00000000 wm4.fsl_device_registers.h.32.f10b25a7fd7ad45b9a40904c33f28816
                           .group:00000000 wm4.MK64F12.h.105.e884e5c80776532d2ec0f5c21e2ea7cb
                           .group:00000000 wm4.core_cm4.h.42.42f38327ee0970d80f60117e6a3ba2b0
                           .group:00000000 wm4.cmsis_gcc.h.36.39970cb43ce4b53c82644a1f9bc2eab9
                           .group:00000000 wm4.core_cm4.h.223.7b48c9958ef5573320c4765074c8b0ce
                           .group:00000000 wm4.system_MK64F12.h.109.c6d21568e03be21b21c922eb7345d6e3
                           .group:00000000 wm4.MK64F12.h.475.cafa8e1e521f96f0b72de286863a6df7
                           .group:00000000 wm4.MK64F12_features.h.92.512cea46d882153168efeec0bc3a9da7
                           .group:00000000 wm4.hardware.h.27.0531344360c1b4ef1fba1263e2a4c488
                           .group:00000000 wm4.math.h.9.e0fac7c18ffc4430a3b17b4c6aa65d4f
                           .group:00000000 wm4.DAC.h.9.a0a8b96f131343e08c8609ae233571d2

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dmul
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2f
DemodulatorInit
sin
DemodulateSignal
